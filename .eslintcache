[{"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\profile.jsx":"1","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\index.js":"2","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\pets.jsx":"3","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\mypets.jsx":"4","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\search.jsx":"5","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\main.jsx":"6","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\navbar.jsx":"7","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\advSearchResults.jsx":"8","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\App.jsx":"9","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petfullprofile.jsx":"10","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petprofile.jsx":"11","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petitem.jsx":"12","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\adminform.jsx":"13","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\admindash.jsx":"14","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\login.jsx":"15","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\userfullprofile.jsx":"16","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\basicSearchResults.jsx":"17","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\protectedRoute.jsx":"18","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Context\\context.jsx":"19","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petcard.jsx":"20","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\userlist.jsx":"21","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petslist.jsx":"22","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\useritem.jsx":"23"},{"size":4881,"mtime":1609955246182,"results":"24","hashOfConfig":"25"},{"size":500,"mtime":1606136368259,"results":"26","hashOfConfig":"25"},{"size":1245,"mtime":1609504734763,"results":"27","hashOfConfig":"25"},{"size":2362,"mtime":1609946696162,"results":"28","hashOfConfig":"25"},{"size":279,"mtime":1608902726302,"results":"29","hashOfConfig":"25"},{"size":3030,"mtime":1609955312024,"results":"30","hashOfConfig":"25"},{"size":1258,"mtime":1609955296460,"results":"31","hashOfConfig":"25"},{"size":793,"mtime":1609621190640,"results":"32","hashOfConfig":"25"},{"size":5096,"mtime":1609963042944,"results":"33","hashOfConfig":"25"},{"size":9245,"mtime":1609955282783,"results":"34","hashOfConfig":"25"},{"size":3608,"mtime":1609955274360,"results":"35","hashOfConfig":"25"},{"size":779,"mtime":1608900014308,"results":"36","hashOfConfig":"25"},{"size":8461,"mtime":1609955401596,"results":"37","hashOfConfig":"25"},{"size":1063,"mtime":1609797628425,"results":"38","hashOfConfig":"25"},{"size":10377,"mtime":1609955340025,"results":"39","hashOfConfig":"25"},{"size":5689,"mtime":1609955189394,"results":"40","hashOfConfig":"25"},{"size":1853,"mtime":1609614754838,"results":"41","hashOfConfig":"25"},{"size":921,"mtime":1609797472522,"results":"42","hashOfConfig":"25"},{"size":169,"mtime":1608411563462,"results":"43","hashOfConfig":"25"},{"size":4200,"mtime":1609955288799,"results":"44","hashOfConfig":"25"},{"size":730,"mtime":1609177897431,"results":"45","hashOfConfig":"25"},{"size":970,"mtime":1608902630506,"results":"46","hashOfConfig":"25"},{"size":778,"mtime":1608668337795,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"1t07s1i",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\profile.jsx",["106","107","108","109"],"import React from 'react';\r\nimport { Button, Container, Form, Col, Alert, } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport { useContext } from 'react';\r\nimport { MainContext } from '../Context/context';\r\nimport { useState } from 'react';\r\nimport NavBar from './navbar';\r\n\r\n\r\nfunction Profile(props) {\r\n    const [id] = useState(props.match.params.id);\r\n    const [error, setError] = useState();\r\n    const { newUser, setNewUser } = useContext(MainContext);\r\n    const { users, setUsers } = useContext(MainContext);\r\n    const { firstName, setFirstName } = useContext(MainContext);\r\n    const { lastName, setLastName } = useContext(MainContext);\r\n    const { email, setEmail } = useContext(MainContext);\r\n    const { telephone, setTelephone } = useContext(MainContext);\r\n    const { bio, setBio } = useContext(MainContext);\r\n    const { password, setPassword } = useContext(MainContext);\r\n    const { token } = useContext(MainContext);\r\n\r\n    const changeFs = (e) => {\r\n        setFirstName(e.target.value);\r\n    }\r\n\r\n    const changeLs = (e) => {\r\n        setLastName(e.target.value);\r\n    }\r\n    const changeTel = (e) => {\r\n        setTelephone(e.target.value);\r\n    }\r\n\r\n    const changeEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n    const changePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const changeBio = (e) => {\r\n        setBio(e.target.value);\r\n    }\r\n\r\n    const submitprofile = async (e) => {\r\n        e.preventDefault();\r\n        let body;\r\n        const newUserData = {\r\n            id: id,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            telephone: telephone,\r\n            email: email,\r\n            password: password,\r\n            bio: bio\r\n        }\r\n        try {\r\n            const response = await fetch('http://localhost:5000/userprofile', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token} `\r\n                },\r\n                body: JSON.stringify({ post: newUserData }),\r\n            })\r\n            body = await response.json();\r\n            setError(body);\r\n        } catch (error) {\r\n            setError(body);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <h1 className=\"header-profile mb-5\"> Your Profile</h1>\r\n            <Container className=\"container-profile\">\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Form onSubmit={e => submitprofile(e)}>\r\n                    <Form.Row>\r\n                        <Col>\r\n                            <Form.Control placeholder=\"First name\"\r\n                                onChange={e => changeFs(e)} defaultValue={firstName} required />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Control placeholder=\"Last name\"\r\n                                onChange={e => changeLs(e)} defaultValue={lastName} required />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Control type='number' placeholder=\"Telephone Number\"\r\n                                onChange={e => changeTel(e)} defaultValue={telephone} />\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row >\r\n                        <Col>\r\n                            <Form.Group controlId=\"formGroupEmail\">\r\n                                <Form.Label></Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\" Your Email\"\r\n                                    onChange={e => changeEmail(e)} defaultValue={email} disabled />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group controlId=\"formGroupPassword\">\r\n                                <Form.Label></Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\"\r\n                                    onChange={e => changePassword(e)} required />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label></Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} placeholder=\"Personal Bio About Yourself!\"\r\n                            onChange={e => changeBio(e)} defaultValue={bio} />\r\n                    </Form.Group>\r\n                    <Button className=\"w-100 mt-4\" variant=\"warning\" type=\"submit\"\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nexport default Profile;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\index.js",[],["110","111"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\pets.jsx",["112","113","114","115"],"import React, { useState } from 'react';\r\nimport { Card, Nav, Button, Tabs, Tab } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport PetProfile from './petprofile';\r\nimport PetStatus from './petstatus';\r\nimport NavBar from './navbar';\r\nimport SavedPetsList from './savedPets';\r\n\r\nfunction Pets(props) {\r\n    const [id, setId] = useState(props.match.params.id);\r\n    const [key, setKey] = useState('home');\r\n\r\n    return (\r\n        <>\r\n        <NavBar/>\r\n        <div>\r\n            <h1 className=\"text-center pet-page\">Pet Page</h1>\r\n            <Tabs\r\n                className=\"tab-pets\"\r\n                activeKey={key}\r\n                onSelect={(k) => setKey(k)}\r\n            >\r\n                <Tab eventKey=\"home\" title=\"Pet Profile\" className=\"tab-item\" >\r\n                    <PetProfile id={id} />\r\n                </Tab>\r\n                <Tab eventKey=\"profile\" title=\"Pet Status\" className=\"tab-item pet-status\">\r\n                    <PetStatus id={id} />\r\n                </Tab>\r\n                <Tab eventKey=\"saved\" title=\"Saved Pets\" className=\"tab-item\">\r\n                    <SavedPetsList/>\r\n                </Tab>\r\n            </Tabs>\r\n        </div>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default Pets;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\mypets.jsx",["116","117","118","119","120","121","122","123","124","125","126","127","128","129","130"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Card, CardDeck, Container, CardImg, CardImage, Image, Img, Button } from 'react-bootstrap';\r\nimport Modal from 'react-modal';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport { MainContext } from '../Context/context';\r\nimport PetCard from './petcard';\r\nimport { getPetById } from '../Api/api'\r\n\r\nconst arrPets = [];\r\n\r\nfunction MyPets() {\r\n    const [petsToDisplay, setPetsToDisplay] = useState([]);\r\n    const { pets, setPets, adopted, fostered, userPetStatus, userPets, currentUser, token } = useContext(MainContext);\r\n\r\n    useEffect(() => {\r\n        const arrPets = []\r\n        if (userPets && userPets.length > 0) {\r\n            userPets.map(id => {\r\n                getPetById(token, id)\r\n                    .then(res => {\r\n                        arrPets.push(res)\r\n                        setPetsToDisplay([...arrPets])\r\n                    });\r\n            })\r\n        };\r\n    }, [userPets]);\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1 className=\"header-profile mb-5\"> Your Pets</h1>\r\n            </div>\r\n            <Card className=\"status\">\r\n                {userPets? <Card.Body className=\"head-status\">{`You have ${userPets.length} Pets.`}</Card.Body> :\r\n                <Card.Body className=\"head-status\">{`You have 0 Pets.`}</Card.Body> }\r\n            </Card>\r\n            <Container className=\"my-pets\">\r\n                <CardDeck className=\"deck\">\r\n                    {petsToDisplay && petsToDisplay.map(pet =>\r\n                        <PetCard\r\n                            key={Math.random()}\r\n                            id={pet.id}\r\n                            name={pet.name}\r\n                            type={pet.type}\r\n                            breed={pet.breed}\r\n                            color={pet.color}\r\n                            diet={pet.dietRestrictions}\r\n                            height={pet.height}\r\n                            weight={pet.weight}\r\n                            hypoalergenic={pet.hypoalergenic}\r\n                            bio={pet.petBio}\r\n                            petStatus={pet.petStatus}\r\n                        />\r\n                    )\r\n                    }\r\n                </CardDeck>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyPets;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\search.jsx",[],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\main.jsx",["131","132","133","134"],"import React, { useContext, useState } from 'react';\r\nimport { Button, Form, FormControl, Card, Image } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../images/logo.png';\r\nimport NavBar from './navbar';\r\nimport { MainContext } from '../Context/context';\r\n\r\nfunction Main() {\r\n    const { firstName, lastName } = useContext(MainContext);\r\n    const [typeSearch, setTypeSearch] = useState();\r\n    const { userId } = useContext(MainContext);\r\n\r\n    const handleTypeInput = (e) => {\r\n        setTypeSearch(e.target.value);\r\n    }\r\n\r\n    const basicSearching = (e) => {\r\n        e.preventDefault();\r\n        javascript: window.location.href = `/basic_search_results/${typeSearch}`;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='main-div'>\r\n                <NavBar />\r\n                {(firstName && lastName) ? <h1 className=\"main-header mb-5\"> {`Welcome ${firstName} ${lastName}!`} </h1> :\r\n                    <h1 className=\"main-header mb-5\"> {`Welcome!`} </h1>}\r\n                <Form className=\"form-hp\" onSubmit={e => basicSearching(e)}>\r\n                    <FormControl\r\n                        as=\"textarea\"\r\n                        className=\"form-control form-hp \"\r\n                        id=''\r\n                        rows={1}\r\n                        placeholder='Search Pets By Type...'\r\n                        onChange={e => handleTypeInput(e)}\r\n                    >\r\n                    </FormControl>\r\n                    <Button className=\"btn btn-warning w-100\" type=\"submit\">Basic Search</Button>\r\n                    <a href=\"/search\" className=\"btn btn-success w-100 mt-2\" >To The Search Page</a>\r\n                </Form>\r\n                <Card className=\"main-card text-center\" >\r\n                    <Card.Header>HomePage Menu</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Welcome to RentaPET</Card.Title>\r\n                        <Card.Text className=\"mb-3\">\r\n                            Your Pet's Page!\r\n                    </Card.Text>\r\n                        <Card.Link href=\"/mypets\" className=\"w-100 btn btn-warning\" variant=\"success\">My Pets Page</Card.Link>\r\n                        <Card.Text className=\"mt-5 mb-3\">\r\n                            Your Profile! We've got your back!\r\n                    </Card.Text>\r\n                        <Card.Link href={`/profile/${userId}`} className=\"w-100 btn btn-warning\" variant=\"warning\">Go to My Profile</Card.Link>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n            <div className=\"banner-div\"><div className=\"banner\"><img src={logo} alt=\"\" className=\"logo-banner\" /><span className=\"banner-txt\">Renta <span className=\"itc\">PET</span> </span> </div></div>\r\n            <div className=\"banner2\"> <img src={logo} alt=\"\" className=\"logo-banner\" /><span className=\"banner-txt\">Renta<span className=\"itc\">PET</span></span></div>\r\n        </>\r\n    )\r\n}\r\nexport default Main;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\navbar.jsx",["135","136"],"import React from 'react';\r\nimport { Navbar, Nav, Button, Form, } from 'react-bootstrap';\r\nimport logo from '../images/logo.png';\r\nimport logo2 from '../images/logo2.png';\r\n\r\n\r\nfunction NavBar() {\r\n    const logout = () =>{\r\n        localStorage.setItem('token', 'noToken');\r\n        localStorage.setItem('admin', 'false');\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"warning\" variant=\"warning\" className=\"navBar\">\r\n            <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"/\" className=\"navLink\">Home</Nav.Link>\r\n                <Nav.Link href='/search' className=\"navLink\">Search</Nav.Link>\r\n                <Nav.Link href='/admin' className=\"navLink\">Admin</Nav.Link>\r\n                <Button href='/logged_out' className=\"logout-btn\" variant='warning' onClick={()=>logout()}>LogOut/In</Button>\r\n                <div className=\"banner-nav\">\r\n                    <img src={logo2} alt=\"\" className=\"logo-nav\" />\r\n                    <span\r\n                        className=\"banner-nav\"\r\n                    >Renta\r\n                    <span className=\"itc\"\r\n                        >PET\r\n                    </span>\r\n                    </span>\r\n                </div>\r\n            </Nav>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavBar;",["137","138"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\advSearchResults.jsx",[],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\App.jsx",["139","140","141","142","143"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petfullprofile.jsx",["144","145","146","147","148","149","150"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Alert, Button, Container, Form, FormControl, Col, Row, Navbar, Nav, } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport { getPetById } from '../Api/api';\r\nimport axios from 'axios';\r\nimport NavBar from './navbar';\r\nimport { MainContext } from '../Context/context';\r\n\r\nfunction PetFullProfile(props) {\r\n    const [id, setId] = useState(props.match.params.id);\r\n    const [error, setError] = useState();\r\n    const [thisPet, setThisPet] = useState({});\r\n    const [petName, setPetName] = useState();\r\n    const [type, setType] = useState();\r\n    const [color, setColor] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [weight, setWeight] = useState();\r\n    const [breed, setBreed] = useState();\r\n    const [petStatus, setPetStatus] = useState('');\r\n    const [hypoalergenic, setHypoalergenic] = useState();\r\n    const [dietRestrictions, setDietRestrictions] = useState();\r\n    const [petBio, setPetBio] = useState();\r\n    const { token } = useContext(MainContext);\r\n\r\n\r\n    useEffect(() => {\r\n        getPetById(token, id)\r\n            .then(res => {\r\n                setThisPet(res);\r\n                setPetName(res.name);\r\n                setType(res.type);\r\n                setHeight(res.height);\r\n                setWeight(res.weight);\r\n                setBreed(res.breed);\r\n                setColor(res.color);\r\n                setPetStatus(res.petStatus);\r\n                setHypoalergenic(res.hypoalergenic);\r\n                setDietRestrictions(res.dietRestrictions);\r\n                setPetBio(res.petBio);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [])\r\n\r\n\r\n    const addPetName = (e) => {\r\n        setPetName(e.target.value);\r\n    }\r\n    const addPetType = (e) => {\r\n        setType(e.target.value);\r\n    }\r\n    const addPetColor = (e) => {\r\n        setColor(e.target.value);\r\n    }\r\n    const addPetHeight = (e) => {\r\n        setHeight(e.target.value);\r\n    }\r\n    const addPetWeight = (e) => {\r\n        setWeight(e.target.value);\r\n    }\r\n    const addPetBreed = (e) => {\r\n        setBreed(e.target.value);\r\n    }\r\n    const addDiet = (e) => {\r\n        setDietRestrictions(e.target.value);\r\n    }\r\n    const addPetBio = (e) => {\r\n        setPetBio(e.target.value);\r\n    }\r\n\r\n    const adoptSelect = (e) => {\r\n        setPetStatus(e.target.value);\r\n    }\r\n\r\n    const hypoSelect = (e) => {\r\n        const selected = e.target.value;\r\n        setHypoalergenic(selected);\r\n    }\r\n    const headers = {\r\n        'Authorization': `Bearer ${token} `\r\n    };\r\n\r\n    const imageHandler = (e) => {\r\n        const data = new FormData();\r\n        e.target.files[0].id = id;\r\n        data.append('file', e.target.files[0]);\r\n        data.append('id', e.target.files[0].id);\r\n        axios.post(`http://localhost:5000/image_upload/${id}`, data, {\r\n            headers: headers\r\n        });\r\n    }\r\n\r\n    const petSubmitting = async (e) => {\r\n        e.preventDefault();\r\n        let body;\r\n        const newPetData = {\r\n            id: id,\r\n            name: petName,\r\n            breed, breed,\r\n            type: type,\r\n            color: color,\r\n            height: height,\r\n            weight: weight,\r\n            petStatus: petStatus,\r\n            hypoalergenic: hypoalergenic,\r\n            dietRestrictions: dietRestrictions,\r\n            petBio: petBio\r\n        }\r\n        try {\r\n            const response = await fetch('http://localhost:5000/pet_admin_edit', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({ post: newPetData }),\r\n            })\r\n            body = await response.json();\r\n            setError(body);\r\n        } catch (error) {\r\n            setError(body);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <div>\r\n                <h1 className=\"header-admin mb-5\"> Admin Pet's Upload Form</h1>\r\n                <a\r\n                    href=\"/admindashboard\"\r\n                    className=\"btn btn-success w-100 admin-link\"\r\n                    variant=\"warning\"\r\n                    type=\"submit\"\r\n                >\r\n                    Click Here To Admin's Dashboard\r\n            </a>\r\n                <Container className=\"container-profile admin-prof\">\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={e => petSubmitting(e)} encType=\"multipart/form-data\">\r\n                        <Form.Row>\r\n                            <Col>\r\n                                <Form.Control placeholder=\"Type\"\r\n                                    onChange={e => addPetType(e)} defaultValue={thisPet.type} />\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Control placeholder=\"Pet's Name\"\r\n                                    onChange={e => addPetName(e)} defaultValue={thisPet.name} />\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Control placeholder=\"Color\"\r\n                                    onChange={e => addPetColor(e)} defaultValue={thisPet.color} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row className=\"mt-3\">\r\n                            <Col>\r\n                                <Form.Control type=\"number\" placeholder=\"Height in Cm\"\r\n                                    onChange={e => addPetHeight(e)} defaultValue={thisPet.height} />\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Control type=\"number\" placeholder=\"Weight in Kg\"\r\n                                    onChange={e => addPetWeight(e)} defaultValue={thisPet.weight} />\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Control placeholder=\"Breed\"\r\n                                    onChange={e => addPetBreed(e)} defaultValue={thisPet.breed} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row className=\"mt-3\">\r\n                            <Col>\r\n                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                    <Form.Label>Adoption Status:</Form.Label>\r\n                                    <Form.Control as=\"select\" onChange={selectValue => adoptSelect(selectValue)}>\r\n                                        <option></option>\r\n                                        <option value='adopted'>Adopted</option>\r\n                                        <option value='fostered'>Fostered</option>\r\n                                        <option value='none'>None of Above</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                                    <Form.Label>Hypoalergenic:</Form.Label>\r\n                                    <Form.Control as=\"select\" onChange={selectValue => hypoSelect(selectValue)}>\r\n                                        <option></option>\r\n                                        <option>Yes</option>\r\n                                        <option>No</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                    <Form.Label>Dietary Restrictions</Form.Label>\r\n                                    <Form.Control as=\"textarea\" rows={5} placeholder=\"Dietary Restrictions...\"\r\n                                        onChange={e => addDiet(e)} defaultValue={thisPet.dietRestrictions} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <input id=\"exampleFormControlFile1\"\r\n                                        label=\"Upload Pet's Image\"\r\n                                        type='file' name='file' onChange={e => imageHandler(e)} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label></Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} placeholder=\"Pet's Bio\"\r\n                                onChange={e => addPetBio(e)} defaultValue={thisPet.petBio} />\r\n                        </Form.Group>\r\n                        <Button className=\"w-100 mt-2\" variant=\"warning\" type=\"submit\">\r\n                            Submit\r\n                    </Button>\r\n                    </Form>\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default PetFullProfile;",["151","152"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petprofile.jsx",["153","154","155","156","157","158","159","160","161","162","163","164"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petitem.jsx",[],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\adminform.jsx",["165","166","167","168","169","170","171"],"import React, { useContext, useState } from 'react';\r\nimport { Alert, Button, Container, Form, FormControl, Col, Row, Navbar, Nav, } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport axios from 'axios';\r\nimport { MainContext } from '../Context/context';\r\nimport NavBar from './navbar';\r\n\r\n\r\nfunction AdminForm() {\r\n    const [error, setError] = useState();\r\n    const [id, setId] = useState();\r\n    const [petName, setPetName] = useState();\r\n    const [type, setType] = useState();\r\n    const [color, setColor] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [weight, setWeight] = useState();\r\n    const [breed, setBreed] = useState();\r\n    const [petStatus, setPetStatus] = useState('');\r\n    const [hypoalergenic, setHypoalergenic] = useState();\r\n    const [dietRestrictions, setDietRestrictions] = useState();\r\n    const [petBio, setPetBio] = useState();\r\n    const [imgActive, setImgActive] = useState(false);\r\n    const { token } = useContext(MainContext);\r\n\r\n    const addPetName = (e) => {\r\n        setPetName(e.target.value);\r\n    }\r\n    const addPetType = (e) => {\r\n        setType(e.target.value);\r\n    }\r\n    const addPetColor = (e) => {\r\n        setColor(e.target.value);\r\n    }\r\n    const addPetHeight = (e) => {\r\n        setHeight(e.target.value);\r\n    }\r\n    const addPetWeight = (e) => {\r\n        setWeight(e.target.value);\r\n    }\r\n    const addPetBreed = (e) => {\r\n        setBreed(e.target.value);\r\n    }\r\n    const addDiet = (e) => {\r\n        setDietRestrictions(e.target.value);\r\n    }\r\n    const addPetBio = (e) => {\r\n        setPetBio(e.target.value);\r\n    }\r\n\r\n    const adoptSelect = (e) => {\r\n        setPetStatus(e.target.value);\r\n    }\r\n\r\n    const hypoSelect = (e) => {\r\n        const selected = e.target.value;\r\n        setHypoalergenic(selected);\r\n    }\r\n\r\n    const headers = {\r\n        'Authorization': `Bearer ${token} `\r\n    };\r\n\r\n    const imageHandler = (e) => {\r\n        axios.get(`http://localhost:5000/pet_id/${petName}/type/${type}`, {\r\n            headers: headers\r\n        })\r\n            .then(res => {\r\n                const data = new FormData();\r\n                data.append('file', e.target.files[0]);\r\n                data.append('id', parseInt(res.data));\r\n                axios.post(`http://localhost:5000/image_upload/${res.data}`, data, {\r\n                    headers: headers\r\n                });\r\n            })\r\n    }\r\n\r\n    const petSubmitting = async (e) => {\r\n        e.preventDefault();\r\n        let body;\r\n        const newPetData = {\r\n            name: petName,\r\n            breed, breed,\r\n            type: type,\r\n            color: color,\r\n            height: height,\r\n            weight: weight,\r\n            petStatus: petStatus,\r\n            hypoalergenic: hypoalergenic,\r\n            dietRestrictions: dietRestrictions,\r\n            petBio: petBio\r\n        }\r\n        try {\r\n            const response = await fetch('http://localhost:5000/pet_profile', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({ post: newPetData }),\r\n            })\r\n            body = await response.json();\r\n            setError(body);\r\n            setImgActive(true);\r\n        } catch (error) {\r\n            setError(body);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <div>\r\n                <h1 className=\"header-admin mb-5\"> Admin Pet's Upload Form</h1>\r\n                <a\r\n                    href=\"/admindashboard\"\r\n                    className=\"btn btn-success w-100 admin-link\"\r\n                    variant=\"warning\"\r\n                    type=\"submit\"\r\n                >\r\n                    Click Here To Admin's Dashboard\r\n            </a>\r\n                <Container className=\"container-profile admin-prof\">\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={e => petSubmitting(e)}>\r\n                        <Form.Row>\r\n                            <Col>\r\n                                <Form.Control placeholder=\"Type\" onChange={e => addPetType(e)} required />\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Control placeholder=\"Pet's Name\" onChange={e => addPetName(e)} required />\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Control placeholder=\"Color\" onChange={e => addPetColor(e)} required />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row className=\"mt-3\">\r\n                            <Col>\r\n                                <Form.Control type=\"number\" placeholder=\"Height in Cm\" onChange={e => addPetHeight(e)} required />\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Control type=\"number\" placeholder=\"Weight in Kg\" onChange={e => addPetWeight(e)} required />\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Control placeholder=\"Breed\" onChange={e => addPetBreed(e)} required />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row className=\"mt-3\">\r\n                            <Col>\r\n                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                    <Form.Label>Adoption Status:</Form.Label>\r\n                                    <Form.Control as=\"select\" onChange={selectValue => adoptSelect(selectValue)} required >\r\n                                        <option></option>\r\n                                        <option value='adopted'>Adopted</option>\r\n                                        <option value='fostered'>Fostered</option>\r\n                                        <option value='none'>None of Above</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                                    <Form.Label>Hypoalergenic:</Form.Label>\r\n                                    <Form.Control as=\"select\" onChange={selectValue => hypoSelect(selectValue)} required>\r\n                                        <option></option>\r\n                                        <option>Yes</option>\r\n                                        <option>No</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                    <Form.Label>Dietary Restrictions</Form.Label>\r\n                                    <Form.Control as=\"textarea\" rows={5} placeholder=\"Dietary Restrictions...\" onChange={e => addDiet(e)} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    {!imgActive ? <Form.Label>After Submitting You Can Upload Pet's Image Here</Form.Label> :\r\n                                        <Form.Label>Upload Pet's Image</Form.Label>}\r\n                                    {imgActive && <input id=\"exampleFormControlFile1\"\r\n                                        label=\"Upload Pet's Image\"\r\n                                        type='file' name='file' onChange={e => imageHandler(e)} />}\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label></Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} placeholder=\"Pet's Bio\" onChange={e => addPetBio(e)} />\r\n                        </Form.Group>\r\n                        <Button className=\"w-100 mt-2\" variant=\"warning\" type=\"submit\">\r\n                            Submit\r\n                    </Button>\r\n                    </Form>\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default AdminForm;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\admindash.jsx",["172","173","174"],"import React, { useState } from 'react';\r\nimport { Card, Nav, Button, Tabs, Tab } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport UsersList from './userlist';\r\nimport PetsList from './petslist';\r\nimport NavBar from './navbar';\r\n\r\nfunction AdminDashboard() {\r\n    const [key, setKey] = useState('home');\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <div>\r\n                <h1 className=\"text-center pet-page\">Admin Dashboard</h1>\r\n                <Tabs\r\n                    className=\"tab-pets\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                >\r\n                    <Tab eventKey=\"home\" title=\"All Users\" className=\"tab-item\" >\r\n                        <UsersList />\r\n                    </Tab>\r\n                    <Tab eventKey=\"profile\" title=\"All Pets\" className=\"tab-item pet-status\">\r\n                        <PetsList />\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default AdminDashboard;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\login.jsx",["175","176","177","178","179"],"import React, { useContext, useState } from 'react';\r\nimport { Card, Form, Alert, Button, Col } from 'react-bootstrap';\r\nimport Modal from 'react-modal';\r\nimport { MainContext } from '../Context/context';\r\nimport axios from 'axios'\r\n\r\nfunction Login() {\r\n    const [modalLoginIsOpen, setModalLoginIsOpen] = useState(false);\r\n    const [modalSignIsOpen, setModalSignIsOpen] = useState(false);\r\n    const [password2, setPassword2] = useState();\r\n    const [error, setError] = useState('');\r\n    const [error2, setError2] = useState('');\r\n    const { firstName, setFirstName } = useContext(MainContext);\r\n    const { lastName, setLastName } = useContext(MainContext);\r\n    const { email, setEmail } = useContext(MainContext);\r\n    const { telephone, setTelephone } = useContext(MainContext);\r\n    const { password, setPassword } = useContext(MainContext);\r\n    const { admin, setAdmin } = useContext(MainContext);\r\n\r\n\r\n    const useLocalState = (localItem) => {\r\n        const [localToken, setState] = useState(localStorage.getItem(localItem));\r\n        const setLocalToken = (newItem) => {\r\n            localStorage.setItem(localItem, newItem);\r\n            setState(newItem);\r\n        }\r\n        return [localToken, setLocalToken];\r\n    }\r\n    const [token, setToken] = useLocalState('token');\r\n    const [administrator, setAdministrator] = useLocalState('admin');\r\n\r\n    const changeFs = (e) => {\r\n        setFirstName(e.target.value);\r\n    }\r\n\r\n    const changeLs = (e) => {\r\n        setLastName(e.target.value);\r\n    }\r\n    const changeTel = (e) => {\r\n        setTelephone(e.target.value);\r\n    }\r\n\r\n    const changeEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n    const changePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const changePassword2 = (e) => {\r\n        setPassword2(e.target.value);\r\n    }\r\n    const submitSignUp = async (e) => {\r\n        e.preventDefault();\r\n        let body;\r\n        if (password === password2) {\r\n            setError('');\r\n            const newUserData = {\r\n                firstName: firstName,\r\n                lastName: lastName,\r\n                telephone: telephone,\r\n                email: email,\r\n                password: password,\r\n            }\r\n            try {\r\n                const checkDupes = await fetch(`http://localhost:5000/checkdupes/${email}`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    }\r\n                })\r\n                const bodyDupe = await checkDupes.json();\r\n                if (bodyDupe.length > 0) setError(\"There is an account with this email already\")\r\n                else if (bodyDupe.length == 0) {\r\n                    const response = await fetch('http://localhost:5000/user_sign', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body: JSON.stringify({ post: newUserData }),\r\n                    })\r\n                    body = await response.json();\r\n                    console.log(body.accessToken)\r\n                    if (body.accessToken.length > 0) {\r\n                        setToken(body.accessToken);\r\n                        setAdministrator(false);\r\n                        setTimeout(()=>{\r\n                            window.location.href = 'http://localhost:3000';\r\n                        },2000)\r\n                        setAdmin(false);\r\n                    }\r\n                    else {\r\n                        setError(body);\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                setError(body);\r\n            }\r\n        }\r\n        else return setError('Passwords do not match');\r\n    }\r\n    const submitLogin = async (e) => {\r\n        e.preventDefault();\r\n        let body;\r\n        setError2('')\r\n        const loginUserData = {\r\n            email: email,\r\n            password: password,\r\n        }\r\n        try {\r\n            const response = await fetch('http://localhost:5000/userlogin', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ post: loginUserData }),\r\n            })\r\n            body = await response.json();\r\n            console.log(body.accessToken)\r\n            if (body.accessToken.length > 0) {\r\n                setToken(body.accessToken);\r\n                setAdministrator(false);\r\n                setTimeout(()=>{\r\n                    window.location.href = 'http://localhost:3000';\r\n                },2000)\r\n                setAdmin(false);\r\n            }\r\n            else {\r\n                setError(body);\r\n            }\r\n        } catch (error) {\r\n            setError2(body);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='logged-out'>\r\n                <h1>Welcome To RentaPET</h1>\r\n                <p className=\"description\">RentaPET is more than a service. It is where you come to show your love for pets.\r\n                Here you will find all you might want to know about your pet, and let's not forget... Your next pet too.\r\n                We do the utmost effort to offer you the most accurate information about our animals,\r\n                and we give you also many options regarding fostering and adopting pets.\r\n                As they say, animals have feelings too and they need our support.\r\n                After all this world is for us to live together, isn't it?\r\n                So please Login if you have an account, if not, just make one! And start browsing in our website,\r\n                your next pet might be just one click away from his next home!\r\n                Good petting!\r\n                 </p>\r\n                <Button type=\"button\" variant=\"warning\" onClick={() => setModalLoginIsOpen(true)}>Login</Button>\r\n                <Button type=\"button\" variant=\"warning\" onClick={() => setModalSignIsOpen(true)}>Sign Up</Button>\r\n                <a href=\"/search\" className=\"btn btn-warning\" >Search Page</a>\r\n                <Modal className=\"logged-out-modal\"\r\n                    isOpen={modalLoginIsOpen}\r\n                    onRequestClose={() => setModalLoginIsOpen(false)}\r\n                >\r\n                    <Card className='login-card'>\r\n                        <Card.Body>\r\n                            <h2 className=\"text-center mb-4\">Log In</h2>\r\n                            {error2 && <Alert variant=\"danger\">{error2}</Alert>}\r\n                            <Form onSubmit={(e) => submitLogin(e)}>\r\n                                <Form.Group id=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control type=\"email\" required onChange={e => changeEmail(e)}></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group id=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type=\"password\" required onChange={e => changePassword(e)}></Form.Control>\r\n                                </Form.Group>\r\n                                <Button className=\"w-100\" type=\"submit\" variant='success'>Log In</Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Modal>\r\n                <Modal className=\"logged-out-modal\"\r\n                    isOpen={modalSignIsOpen}\r\n                    onRequestClose={() => setModalSignIsOpen(false)}\r\n                >\r\n                    <Card className='sign-card'>\r\n                        <Card.Body><h2 className=\"text-center mb-5 sign-header\">Sign-Up</h2></Card.Body>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        <Form onSubmit={(e) => submitSignUp(e)} >\r\n                            <Form.Row>\r\n                                <Col>\r\n                                    <Form.Group id=\"firstName\">\r\n                                        <Form.Label>First Name</Form.Label>\r\n                                        <Form.Control type=\"text\" required onChange={e => changeFs(e)} ></Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group id=\"lastName\">\r\n                                        <Form.Label>Last Name</Form.Label>\r\n                                        <Form.Control type=\"text\" required onChange={e => changeLs(e)}></Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group id=\"telephone\">\r\n                                        <Form.Label>Phone Number</Form.Label>\r\n                                        <Form.Control type=\"number\" required onChange={e => changeTel(e)}></Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Form.Row>\r\n                            <Form.Group id=\"email\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control type=\"email\" required onChange={e => changeEmail(e)}></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group id=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" required onChange={e => changePassword(e)}></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group id=\"password-confirm\">\r\n                                <Form.Label>Password Confirmation</Form.Label>\r\n                                <Form.Control type=\"password\" required onChange={e => changePassword2(e)} ></Form.Control>\r\n                            </Form.Group>\r\n                            <Button className=\"w-100\" type=\"submit\" variant='success'>Sign Up</Button>\r\n                        </Form>\r\n                    </Card>\r\n                </Modal>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Login;\r\n","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\userfullprofile.jsx",["180","181","182","183","184","185","186","187","188"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\basicSearchResults.jsx",["189","190","191","192"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\protectedRoute.jsx",["193","194"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Context\\context.jsx",["195","196","197"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petcard.jsx",["198","199","200","201","202","203","204","205","206"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\userlist.jsx",["207","208"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petslist.jsx",[],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\useritem.jsx",["209"],{"ruleId":"210","severity":1,"message":"211","line":14,"column":13,"nodeType":"212","messageId":"213","endLine":14,"endColumn":20},{"ruleId":"210","severity":1,"message":"214","line":14,"column":22,"nodeType":"212","messageId":"213","endLine":14,"endColumn":32},{"ruleId":"210","severity":1,"message":"215","line":15,"column":13,"nodeType":"212","messageId":"213","endLine":15,"endColumn":18},{"ruleId":"210","severity":1,"message":"216","line":15,"column":20,"nodeType":"212","messageId":"213","endLine":15,"endColumn":28},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"210","severity":1,"message":"221","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"222","line":2,"column":16,"nodeType":"212","messageId":"213","endLine":2,"endColumn":19},{"ruleId":"210","severity":1,"message":"223","line":2,"column":21,"nodeType":"212","messageId":"213","endLine":2,"endColumn":27},{"ruleId":"210","severity":1,"message":"224","line":10,"column":16,"nodeType":"212","messageId":"213","endLine":10,"endColumn":21},{"ruleId":"210","severity":1,"message":"225","line":2,"column":37,"nodeType":"212","messageId":"213","endLine":2,"endColumn":44},{"ruleId":"210","severity":1,"message":"226","line":2,"column":46,"nodeType":"212","messageId":"213","endLine":2,"endColumn":55},{"ruleId":"210","severity":1,"message":"227","line":2,"column":57,"nodeType":"212","messageId":"213","endLine":2,"endColumn":62},{"ruleId":"210","severity":1,"message":"228","line":2,"column":64,"nodeType":"212","messageId":"213","endLine":2,"endColumn":67},{"ruleId":"210","severity":1,"message":"223","line":2,"column":69,"nodeType":"212","messageId":"213","endLine":2,"endColumn":75},{"ruleId":"210","severity":1,"message":"229","line":3,"column":8,"nodeType":"212","messageId":"213","endLine":3,"endColumn":13},{"ruleId":"210","severity":1,"message":"230","line":10,"column":7,"nodeType":"212","messageId":"213","endLine":10,"endColumn":14},{"ruleId":"210","severity":1,"message":"231","line":14,"column":13,"nodeType":"212","messageId":"213","endLine":14,"endColumn":17},{"ruleId":"210","severity":1,"message":"232","line":14,"column":19,"nodeType":"212","messageId":"213","endLine":14,"endColumn":26},{"ruleId":"210","severity":1,"message":"233","line":14,"column":28,"nodeType":"212","messageId":"213","endLine":14,"endColumn":35},{"ruleId":"210","severity":1,"message":"234","line":14,"column":37,"nodeType":"212","messageId":"213","endLine":14,"endColumn":45},{"ruleId":"210","severity":1,"message":"235","line":14,"column":47,"nodeType":"212","messageId":"213","endLine":14,"endColumn":60},{"ruleId":"210","severity":1,"message":"236","line":14,"column":72,"nodeType":"212","messageId":"213","endLine":14,"endColumn":83},{"ruleId":"237","severity":1,"message":"238","line":19,"column":29,"nodeType":"239","messageId":"240","endLine":19,"endColumn":31},{"ruleId":"241","severity":1,"message":"242","line":27,"column":8,"nodeType":"243","endLine":27,"endColumn":18,"suggestions":"244"},{"ruleId":"210","severity":1,"message":"227","line":2,"column":43,"nodeType":"212","messageId":"213","endLine":2,"endColumn":48},{"ruleId":"210","severity":1,"message":"245","line":4,"column":10,"nodeType":"212","messageId":"213","endLine":4,"endColumn":14},{"ruleId":"246","severity":1,"message":"247","line":20,"column":9,"nodeType":"248","messageId":"249","endLine":20,"endColumn":82},{"ruleId":"250","severity":1,"message":"251","line":20,"column":9,"nodeType":"212","messageId":"252","endLine":20,"endColumn":19,"fix":"253"},{"ruleId":"210","severity":1,"message":"254","line":2,"column":31,"nodeType":"212","messageId":"213","endLine":2,"endColumn":35},{"ruleId":"210","severity":1,"message":"255","line":3,"column":8,"nodeType":"212","messageId":"213","endLine":3,"endColumn":12},{"ruleId":"217","replacedBy":"256"},{"ruleId":"219","replacedBy":"257"},{"ruleId":"210","severity":1,"message":"258","line":20,"column":47,"nodeType":"212","messageId":"213","endLine":20,"endColumn":58},{"ruleId":"210","severity":1,"message":"259","line":37,"column":20,"nodeType":"212","messageId":"213","endLine":37,"endColumn":31},{"ruleId":"210","severity":1,"message":"260","line":38,"column":19,"nodeType":"212","messageId":"213","endLine":38,"endColumn":29},{"ruleId":"210","severity":1,"message":"261","line":39,"column":25,"nodeType":"212","messageId":"213","endLine":39,"endColumn":41},{"ruleId":"262","severity":1,"message":"263","line":52,"column":15,"nodeType":"264","messageId":"265","endLine":52,"endColumn":17},{"ruleId":"210","severity":1,"message":"266","line":2,"column":42,"nodeType":"212","messageId":"213","endLine":2,"endColumn":53},{"ruleId":"210","severity":1,"message":"267","line":2,"column":60,"nodeType":"212","messageId":"213","endLine":2,"endColumn":63},{"ruleId":"210","severity":1,"message":"268","line":2,"column":65,"nodeType":"212","messageId":"213","endLine":2,"endColumn":71},{"ruleId":"210","severity":1,"message":"222","line":2,"column":73,"nodeType":"212","messageId":"213","endLine":2,"endColumn":76},{"ruleId":"210","severity":1,"message":"224","line":11,"column":16,"nodeType":"212","messageId":"213","endLine":11,"endColumn":21},{"ruleId":"241","severity":1,"message":"269","line":43,"column":8,"nodeType":"243","endLine":43,"endColumn":10,"suggestions":"270"},{"ruleId":"271","severity":1,"message":"272","line":99,"column":20,"nodeType":"273","messageId":"265","endLine":99,"endColumn":25},{"ruleId":"217","replacedBy":"274"},{"ruleId":"219","replacedBy":"275"},{"ruleId":"210","severity":1,"message":"221","line":1,"column":10,"nodeType":"212","messageId":"213","endLine":1,"endColumn":14},{"ruleId":"210","severity":1,"message":"222","line":1,"column":16,"nodeType":"212","messageId":"213","endLine":1,"endColumn":19},{"ruleId":"210","severity":1,"message":"276","line":1,"column":29,"nodeType":"212","messageId":"213","endLine":1,"endColumn":33},{"ruleId":"210","severity":1,"message":"277","line":1,"column":35,"nodeType":"212","messageId":"213","endLine":1,"endColumn":38},{"ruleId":"210","severity":1,"message":"278","line":4,"column":8,"nodeType":"212","messageId":"213","endLine":4,"endColumn":14},{"ruleId":"210","severity":1,"message":"279","line":12,"column":20,"nodeType":"212","messageId":"213","endLine":12,"endColumn":28},{"ruleId":"210","severity":1,"message":"280","line":12,"column":74,"nodeType":"212","messageId":"213","endLine":12,"endColumn":86},{"ruleId":"241","severity":1,"message":"281","line":25,"column":8,"nodeType":"243","endLine":25,"endColumn":37,"suggestions":"282"},{"ruleId":"262","severity":1,"message":"283","line":28,"column":19,"nodeType":"264","messageId":"265","endLine":28,"endColumn":21},{"ruleId":"262","severity":1,"message":"283","line":28,"column":38,"nodeType":"264","messageId":"265","endLine":28,"endColumn":40},{"ruleId":"210","severity":1,"message":"284","line":59,"column":19,"nodeType":"212","messageId":"213","endLine":59,"endColumn":23},{"ruleId":"285","severity":1,"message":"286","line":70,"column":29,"nodeType":"287","endLine":70,"endColumn":101},{"ruleId":"210","severity":1,"message":"266","line":2,"column":42,"nodeType":"212","messageId":"213","endLine":2,"endColumn":53},{"ruleId":"210","severity":1,"message":"267","line":2,"column":60,"nodeType":"212","messageId":"213","endLine":2,"endColumn":63},{"ruleId":"210","severity":1,"message":"268","line":2,"column":65,"nodeType":"212","messageId":"213","endLine":2,"endColumn":71},{"ruleId":"210","severity":1,"message":"222","line":2,"column":73,"nodeType":"212","messageId":"213","endLine":2,"endColumn":76},{"ruleId":"210","severity":1,"message":"288","line":12,"column":12,"nodeType":"212","messageId":"213","endLine":12,"endColumn":14},{"ruleId":"210","severity":1,"message":"224","line":12,"column":16,"nodeType":"212","messageId":"213","endLine":12,"endColumn":21},{"ruleId":"271","severity":1,"message":"272","line":83,"column":20,"nodeType":"273","messageId":"265","endLine":83,"endColumn":25},{"ruleId":"210","severity":1,"message":"221","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"222","line":2,"column":16,"nodeType":"212","messageId":"213","endLine":2,"endColumn":19},{"ruleId":"210","severity":1,"message":"223","line":2,"column":21,"nodeType":"212","messageId":"213","endLine":2,"endColumn":27},{"ruleId":"210","severity":1,"message":"289","line":5,"column":8,"nodeType":"212","messageId":"213","endLine":5,"endColumn":13},{"ruleId":"210","severity":1,"message":"290","line":18,"column":13,"nodeType":"212","messageId":"213","endLine":18,"endColumn":18},{"ruleId":"210","severity":1,"message":"291","line":29,"column":12,"nodeType":"212","messageId":"213","endLine":29,"endColumn":17},{"ruleId":"210","severity":1,"message":"292","line":30,"column":12,"nodeType":"212","messageId":"213","endLine":30,"endColumn":25},{"ruleId":"262","severity":1,"message":"283","line":73,"column":42,"nodeType":"264","messageId":"265","endLine":73,"endColumn":44},{"ruleId":"210","severity":1,"message":"224","line":13,"column":16,"nodeType":"212","messageId":"213","endLine":13,"endColumn":21},{"ruleId":"210","severity":1,"message":"293","line":16,"column":12,"nodeType":"212","messageId":"213","endLine":16,"endColumn":27},{"ruleId":"210","severity":1,"message":"294","line":16,"column":29,"nodeType":"212","messageId":"213","endLine":16,"endColumn":47},{"ruleId":"210","severity":1,"message":"211","line":17,"column":13,"nodeType":"212","messageId":"213","endLine":17,"endColumn":20},{"ruleId":"210","severity":1,"message":"214","line":17,"column":22,"nodeType":"212","messageId":"213","endLine":17,"endColumn":32},{"ruleId":"210","severity":1,"message":"215","line":18,"column":13,"nodeType":"212","messageId":"213","endLine":18,"endColumn":18},{"ruleId":"210","severity":1,"message":"216","line":18,"column":20,"nodeType":"212","messageId":"213","endLine":18,"endColumn":28},{"ruleId":"210","severity":1,"message":"279","line":25,"column":20,"nodeType":"212","messageId":"213","endLine":25,"endColumn":28},{"ruleId":"241","severity":1,"message":"269","line":33,"column":8,"nodeType":"243","endLine":33,"endColumn":10,"suggestions":"295"},{"ruleId":"210","severity":1,"message":"296","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":21},{"ruleId":"210","severity":1,"message":"297","line":3,"column":10,"nodeType":"212","messageId":"213","endLine":3,"endColumn":20},{"ruleId":"210","severity":1,"message":"298","line":10,"column":24,"nodeType":"212","messageId":"213","endLine":10,"endColumn":37},{"ruleId":"241","severity":1,"message":"299","line":21,"column":8,"nodeType":"243","endLine":21,"endColumn":10,"suggestions":"300"},{"ruleId":"210","severity":1,"message":"301","line":5,"column":22,"nodeType":"212","messageId":"213","endLine":5,"endColumn":33},{"ruleId":"262","severity":1,"message":"283","line":12,"column":34,"nodeType":"264","messageId":"265","endLine":12,"endColumn":36},{"ruleId":"210","severity":1,"message":"302","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":25},{"ruleId":"210","severity":1,"message":"303","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":19},{"ruleId":"210","severity":1,"message":"297","line":3,"column":10,"nodeType":"212","messageId":"213","endLine":3,"endColumn":20},{"ruleId":"210","severity":1,"message":"304","line":11,"column":12,"nodeType":"212","messageId":"213","endLine":11,"endColumn":19},{"ruleId":"210","severity":1,"message":"305","line":11,"column":21,"nodeType":"212","messageId":"213","endLine":11,"endColumn":31},{"ruleId":"262","severity":1,"message":"283","line":25,"column":29,"nodeType":"264","messageId":"265","endLine":25,"endColumn":31},{"ruleId":"262","severity":1,"message":"283","line":26,"column":34,"nodeType":"264","messageId":"265","endLine":26,"endColumn":36},{"ruleId":"241","severity":1,"message":"306","line":27,"column":8,"nodeType":"243","endLine":27,"endColumn":31,"suggestions":"307"},{"ruleId":"210","severity":1,"message":"284","line":38,"column":15,"nodeType":"212","messageId":"213","endLine":38,"endColumn":19},{"ruleId":"262","severity":1,"message":"283","line":39,"column":23,"nodeType":"264","messageId":"265","endLine":39,"endColumn":25},{"ruleId":"262","severity":1,"message":"283","line":44,"column":28,"nodeType":"264","messageId":"265","endLine":44,"endColumn":30},{"ruleId":"262","severity":1,"message":"283","line":49,"column":28,"nodeType":"264","messageId":"265","endLine":49,"endColumn":30},{"ruleId":"210","severity":1,"message":"308","line":4,"column":8,"nodeType":"212","messageId":"213","endLine":4,"endColumn":15},{"ruleId":"210","severity":1,"message":"216","line":8,"column":20,"nodeType":"212","messageId":"213","endLine":8,"endColumn":28},{"ruleId":"210","severity":1,"message":"223","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":16},"no-unused-vars","'newUser' is assigned a value but never used.","Identifier","unusedVar","'setNewUser' is assigned a value but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","no-native-reassign",["309"],"no-negated-in-lhs",["310"],"'Card' is defined but never used.","'Nav' is defined but never used.","'Button' is defined but never used.","'setId' is assigned a value but never used.","'CardImg' is defined but never used.","'CardImage' is defined but never used.","'Image' is defined but never used.","'Img' is defined but never used.","'Modal' is defined but never used.","'arrPets' is assigned a value but never used.","'pets' is assigned a value but never used.","'setPets' is assigned a value but never used.","'adopted' is assigned a value but never used.","'fostered' is assigned a value but never used.","'userPetStatus' is assigned a value but never used.","'currentUser' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["311"],"'Link' is defined but never used.","no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'javascript:' is defined but never used.","unused",{"range":"312","text":"313"},"'Form' is defined but never used.","'logo' is defined but never used.",["309"],["310"],"'getAdminApi' is defined but never used.","'setFostered' is assigned a value but never used.","'setAdopted' is assigned a value but never used.","'setUserPetStatus' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'FormControl' is defined but never used.","'Row' is defined but never used.","'Navbar' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'token'. Either include them or remove the dependency array.",["314"],"no-dupe-keys","Duplicate key 'breed'.","ObjectExpression",["309"],["310"],"'Tabs' is defined but never used.","'Tab' is defined but never used.","'NavBar' is defined but never used.","'setToken' is assigned a value but never used.","'setPetsSaved' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.id' and 'token'. Either include them or remove the dependency array.",["315"],"Expected '===' and instead saw '=='.","'body' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'id' is assigned a value but never used.","'axios' is defined but never used.","'admin' is assigned a value but never used.","'token' is assigned a value but never used.","'administrator' is assigned a value but never used.","'userFullProfile' is assigned a value but never used.","'setUserFullProfile' is assigned a value but never used.",["316"],"'MainContext' is defined but never used.","'useContext' is defined but never used.","'setTypeSearch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'basicSearching' and 'typeSearch'. Either include them or remove the dependency array.",["317"],"'setPermited' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'thisPet' is assigned a value but never used.","'setThisPet' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.id', 'props.petStatus', and 'token'. Either include them or remove the dependency array.",["318"],"'PetItem' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"319","fix":"320"},[690,702],"",{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"321","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},"Update the dependencies array to be: [token, userPets]",{"range":"330","text":"331"},"Update the dependencies array to be: [id, token]",{"range":"332","text":"333"},"Update the dependencies array to be: [petsSaved, savedPets, saved, token, props.id]",{"range":"334","text":"335"},{"range":"336","text":"333"},"Update the dependencies array to be: [basicSearching, typeSearch]",{"range":"337","text":"338"},"Update the dependencies array to be: [currentUser, props.id, props.petStatus, refresher, token]",{"range":"339","text":"340"},[993,1003],"[token, userPets]",[1732,1734],"[id, token]",[968,997],"[petsSaved, savedPets, saved, token, props.id]",[1377,1379],[680,682],"[basicSearching, typeSearch]",[1110,1133],"[currentUser, props.id, props.petStatus, refresher, token]"]
[{"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\profile.jsx":"1","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\index.js":"2","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\mypets.jsx":"3","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\search.jsx":"4","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\main.jsx":"5","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\navbar.jsx":"6","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\advSearchResults.jsx":"7","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\App.jsx":"8","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petfullprofile.jsx":"9","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petprofile.jsx":"10","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petitem.jsx":"11","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\adminform.jsx":"12","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\admindash.jsx":"13","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\login.jsx":"14","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\userfullprofile.jsx":"15","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\basicSearchResults.jsx":"16","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\protectedRoute.jsx":"17","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Context\\context.jsx":"18","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petcard.jsx":"19","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\userlist.jsx":"20","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petslist.jsx":"21","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\useritem.jsx":"22","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\reportWebVitals.js":"23","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Api\\api.js":"24","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\edit.jsx":"25","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\adminLogin.jsx":"26","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\savedPets.jsx":"27","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\toggle.jsx":"28","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petstatus.jsx":"29","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petspage.jsx":"30","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\adminsList.jsx":"31","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\adminItem.jsx":"32","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\adminfullprofile.jsx":"33","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\protectedRouteProfile.jsx":"34"},{"size":5756,"mtime":1610059160399,"results":"35","hashOfConfig":"36"},{"size":500,"mtime":1606136368259,"results":"37","hashOfConfig":"36"},{"size":2413,"mtime":1610220690707,"results":"38","hashOfConfig":"36"},{"size":279,"mtime":1608902726302,"results":"39","hashOfConfig":"36"},{"size":3538,"mtime":1610221401483,"results":"40","hashOfConfig":"36"},{"size":1599,"mtime":1610110661012,"results":"41","hashOfConfig":"36"},{"size":793,"mtime":1609621190640,"results":"42","hashOfConfig":"36"},{"size":5438,"mtime":1610220676456,"results":"43","hashOfConfig":"36"},{"size":9373,"mtime":1610219879047,"results":"44","hashOfConfig":"36"},{"size":3743,"mtime":1610102109623,"results":"45","hashOfConfig":"36"},{"size":863,"mtime":1610105741303,"results":"46","hashOfConfig":"36"},{"size":8709,"mtime":1610219890268,"results":"47","hashOfConfig":"36"},{"size":1255,"mtime":1610109369931,"results":"48","hashOfConfig":"36"},{"size":10617,"mtime":1610220540375,"results":"49","hashOfConfig":"36"},{"size":5881,"mtime":1610059042166,"results":"50","hashOfConfig":"36"},{"size":1853,"mtime":1609614754838,"results":"51","hashOfConfig":"36"},{"size":921,"mtime":1610105996405,"results":"52","hashOfConfig":"36"},{"size":169,"mtime":1608411563462,"results":"53","hashOfConfig":"36"},{"size":4216,"mtime":1610043607022,"results":"54","hashOfConfig":"36"},{"size":1020,"mtime":1610109847356,"results":"55","hashOfConfig":"36"},{"size":1231,"mtime":1610110968026,"results":"56","hashOfConfig":"36"},{"size":776,"mtime":1610055161655,"results":"57","hashOfConfig":"36"},{"size":362,"mtime":1606136368259,"results":"58","hashOfConfig":"36"},{"size":5670,"mtime":1610107771937,"results":"59","hashOfConfig":"36"},{"size":3760,"mtime":1608493363249,"results":"60","hashOfConfig":"36"},{"size":9408,"mtime":1610220122417,"results":"61","hashOfConfig":"36"},{"size":1499,"mtime":1609955224616,"results":"62","hashOfConfig":"36"},{"size":7713,"mtime":1610098785290,"results":"63","hashOfConfig":"36"},{"size":2859,"mtime":1610032267753,"results":"64","hashOfConfig":"36"},{"size":1093,"mtime":1610102482500,"results":"65","hashOfConfig":"36"},{"size":1059,"mtime":1610110962883,"results":"66","hashOfConfig":"36"},{"size":780,"mtime":1610055168489,"results":"67","hashOfConfig":"36"},{"size":5632,"mtime":1610059367471,"results":"68","hashOfConfig":"36"},{"size":932,"mtime":1610106136089,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},"tmqfzb",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"73"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"73"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"73"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"73"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"73"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"73"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"73"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"73"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"73"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"73"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"73"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"73"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"140","usedDeprecatedRules":"73"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"73"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"73"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"73"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"73"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"73"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"73"},"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\profile.jsx",["159","160","161","162"],"import React from 'react';\r\nimport { Button, Container, Form, Col, Alert, } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport { useContext } from 'react';\r\nimport { MainContext } from '../Context/context';\r\nimport { useState } from 'react';\r\nimport NavBar from './navbar';\r\n\r\nfunction Profile(props) {\r\n    const [id] = useState(props.match.params.id);\r\n    const [error, setError] = useState();\r\n    const { newUser, setNewUser } = useContext(MainContext);\r\n    const { users, setUsers } = useContext(MainContext);\r\n    const { firstName, setFirstName } = useContext(MainContext);\r\n    const { lastName, setLastName } = useContext(MainContext);\r\n    const { email, setEmail } = useContext(MainContext);\r\n    const { telephone, setTelephone } = useContext(MainContext);\r\n    const { bio, setBio } = useContext(MainContext);\r\n    const { password, setPassword } = useContext(MainContext);\r\n    const { token } = useContext(MainContext);\r\n    const admin = localStorage.getItem('admin');\r\n\r\n    const changeFs = (e) => {\r\n        setFirstName(e.target.value);\r\n    }\r\n\r\n    const changeLs = (e) => {\r\n        setLastName(e.target.value);\r\n    }\r\n    const changeTel = (e) => {\r\n        setTelephone(e.target.value);\r\n    }\r\n\r\n    const changeEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n    const changePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const changeBio = (e) => {\r\n        setBio(e.target.value);\r\n    }\r\n\r\n    const submitprofile = async (e) => {\r\n        e.preventDefault();\r\n        let body;\r\n        const newUserData = {\r\n            id: id,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            telephone: telephone,\r\n            email: email,\r\n            password: password,\r\n            bio: bio\r\n        };\r\n        if (admin === 'false') {\r\n            try {\r\n                const response = await fetch('https://us-central1-pet-project-backend-9c241.cloudfunctions.net/app/userprofile', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${token} `\r\n                    },\r\n                    body: JSON.stringify({ post: newUserData }),\r\n                });\r\n                body = await response.json();\r\n                setError(body);\r\n            } catch (error) {\r\n                setError(body);\r\n            };\r\n        }\r\n        else {\r\n            try {\r\n                const response = await fetch('https://us-central1-pet-project-backend-9c241.cloudfunctions.net/app/adminprofile', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${token} `\r\n                    },\r\n                    body: JSON.stringify({ post: newUserData }),\r\n                });\r\n                body = await response.json();\r\n                setError(body);\r\n            } catch (error) {\r\n                setError(body);\r\n            };\r\n        };\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <h1 className=\"header-profile mb-5\"> Your Profile</h1>\r\n            <Container className=\"container-profile\">\r\n                <Form onSubmit={e => submitprofile(e)}>\r\n                    <Form.Row>\r\n                        <Col>\r\n                            <Form.Control placeholder=\"First name\"\r\n                                onChange={e => changeFs(e)} defaultValue={firstName} required />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Control placeholder=\"Last name\"\r\n                                onChange={e => changeLs(e)} defaultValue={lastName} required />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Control type='number' placeholder=\"Telephone Number\"\r\n                                onChange={e => changeTel(e)} defaultValue={telephone} />\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row >\r\n                        <Col>\r\n                            <Form.Group controlId=\"formGroupEmail\">\r\n                                <Form.Label></Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\" Your Email\"\r\n                                    onChange={e => changeEmail(e)} defaultValue={email} disabled />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group controlId=\"formGroupPassword\">\r\n                                <Form.Label></Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\"\r\n                                    onChange={e => changePassword(e)} required />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label></Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} placeholder=\"Personal Bio About Yourself!\"\r\n                            onChange={e => changeBio(e)} defaultValue={bio} />\r\n                    </Form.Group>\r\n                    <Button className=\"w-100 mt-4 mb-4\" variant=\"warning\" type=\"submit\"\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                    {error && <Alert variant=\"danger\" className=\"text-center \">{error}</Alert>}\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nexport default Profile;",["163","164"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\index.js",[],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\mypets.jsx",["165","166","167","168","169","170","171","172","173","174","175","176","177","178","179"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\search.jsx",[],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\main.jsx",["180","181","182","183","184","185","186"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\navbar.jsx",["187","188","189","190"],"import React, { useContext } from 'react';\r\nimport { Navbar, Nav, Button, Form, } from 'react-bootstrap';\r\nimport { MainContext } from '../Context/context';\r\nimport logo from '../images/logo.png';\r\nimport logo2 from '../images/logo2.png';\r\n\r\n\r\nfunction NavBar() {\r\n    const{firsName, setFirstName, lastName, setLastName} = useContext(MainContext)\r\n    const logout = () => {\r\n        localStorage.setItem('token', 'noToken');\r\n        localStorage.setItem('admin', 'false');\r\n        setFirstName('');\r\n        setLastName('');\r\n        window.location.href = 'https://pet-project-itc.herokuapp.com/'\r\n    }\r\n    <Nav.Link href='/admin' className=\"navLink\">Admin</Nav.Link>\r\n    return (\r\n        <Navbar bg=\"warning\" variant=\"warning\" className=\"navBar\">\r\n            <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"/\" className=\"navLink\">Home</Nav.Link>\r\n                <Nav.Link href='/search' className=\"navLink\">Search</Nav.Link>\r\n                <Button href='/logged_out' className=\"logout-btn\" variant='warning'>SignIn</Button>\r\n                <Button className=\"logout-btn\" variant='warning' onClick={() => logout()}>Logout</Button>\r\n                <div className=\"banner-nav\">\r\n                    <a href=\"/\"><img src={logo2} alt=\"\" className=\"logo-nav\" /><span\r\n                        className=\"banner-nav\"\r\n                    >Renta\r\n                    <span className=\"itc\"\r\n                        >PET\r\n                    </span>\r\n                    </span></a>\r\n\r\n                </div>\r\n            </Nav>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavBar;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\advSearchResults.jsx",[],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\App.jsx",["191","192","193","194"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petfullprofile.jsx",["195","196","197","198","199","200","201"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petprofile.jsx",["202","203","204","205","206","207","208","209","210","211","212","213"],"import { Card, Nav, Button, Tabs, Tab, Alert } from 'react-bootstrap';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { getImgById, getPetById } from '../Api/api';\r\nimport NavBar from './navbar';\r\nimport { MainContext } from '../Context/context';\r\nimport PetStatus from './petstatus';\r\n\r\nfunction PetProfile(props) {\r\n    const [admin] = useState(localStorage.getItem('admin'));\r\n    const [error, setError] = useState();\r\n    const [thisPet, setThisPet] = useState({});\r\n    const [imgPath, setImgPath] = useState();\r\n    const { token, setToken, userId, savedPets, setSavedPets, petsSaved, setPetsSaved, saved, setSaved } = useContext(MainContext);\r\n\r\n    useEffect(() => {\r\n        getPetById(token, props.id)\r\n            .then(res => {\r\n                setThisPet(res);\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n        getImgById(token, props.id)\r\n            .then(res => {\r\n                if (res) setImgPath(res);\r\n            })\r\n    }, [petsSaved, savedPets, saved])\r\n\r\n    const onSavePet = async () => {\r\n        if (admin == 'true' || token == 'noToken') {\r\n            setError('You must login as a User to Save Pets');\r\n            return;\r\n        }\r\n        try {\r\n            const response = await fetch(`https://us-central1-pet-project-backend-9c241.cloudfunctions.net/app/${userId}/pet/${props.id}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({ post: 'Saving Pet' }),\r\n            })\r\n            const body = await response.json();\r\n            setSavedPets(body);\r\n            setSaved(true);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const onUnSavePet = async () => {\r\n        try {\r\n            const response = await fetch(`https://us-central1-pet-project-backend-9c241.cloudfunctions.net/app/save_pet/user/${userId}/pet/${props.id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({ post: 'Unsaving Pet' }),\r\n            })\r\n            const body = await response.json();\r\n            setSaved(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {error && <Alert variant=\"danger\" className='profile-error'>{error}</Alert>}\r\n            <div>\r\n                {imgPath && <img src={`${imgPath}`} className='profile-img' />}\r\n                <div className='pet-info'>\r\n                    <p>Name: {thisPet.name} </p>\r\n                    <p>Type: {thisPet.type}</p>\r\n                    <p>Breed: {thisPet.breed}</p>\r\n                    <p>Color: {thisPet.color}</p>\r\n                    <p>Height in Cm: {thisPet.height}</p>\r\n                    <p>Weight in Kg: {thisPet.weight}</p>\r\n                    <p>Bio: {thisPet.petBio}</p>\r\n                    <p>Hypoallergenic: {thisPet.hypoalergenic}</p>\r\n                    <p>Dietary Restrictions: {thisPet.dietRestrictions}</p>\r\n                    <img src=\"\" alt=\"\" />\r\n                    {!error && !saved && <Button type=\"button\" variant=\"warning\" onClick={() => { onSavePet() }}>Save for Later</Button>}\r\n                    {!error && saved && <Button type=\"button\" variant=\"warning\" onClick={() => { onUnSavePet() }}>Click here to remove from Save List</Button>}\r\n                    <PetStatus id={props.id}/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default PetProfile;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petitem.jsx",[],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\adminform.jsx",["214","215","216","217","218","219","220"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\admindash.jsx",["221","222","223"],"import React, { useState } from 'react';\r\nimport { Card, Nav, Button, Tabs, Tab } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport UsersList from './userlist';\r\nimport PetsList from './petslist';\r\nimport NavBar from './navbar';\r\nimport AdminsList from './adminsList';\r\n\r\nfunction AdminDashboard() {\r\n    const [key, setKey] = useState('home');\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <div>\r\n                <h1 className=\"text-center pet-page\">Admin Dashboard</h1>\r\n                <Tabs\r\n                    className=\"tab-pets\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                >\r\n                    <Tab eventKey=\"home\" title=\"All Users\" className=\"tab-item\" >\r\n                        <UsersList />\r\n                    </Tab>\r\n                    <Tab eventKey=\"profile\" title=\"All Pets\" className=\"tab-item pet-status\">\r\n                        <PetsList />\r\n                    </Tab>\r\n                    <Tab eventKey=\"admin\" title=\"All Admin\" className=\"tab-item\" >\r\n                        <AdminsList />\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default AdminDashboard;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\login.jsx",["224","225","226","227","228"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\userfullprofile.jsx",["229","230","231","232","233","234","235","236","237"],"import React, { useEffect } from 'react';\r\nimport { Button, Container, Form, Col, Alert, } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport { useContext } from 'react';\r\nimport { MainContext } from '../Context/context';\r\nimport { useState } from 'react';\r\nimport { getUserById } from '../Api/api';\r\nimport NavBar from './navbar';\r\n\r\n\r\nfunction UserFullProfile(props) {\r\n    const [id, setId] = useState(props.match.params.id);\r\n    const [thisUser, setThisUser] = useState({});\r\n    const [error, setError] = useState();\r\n    const [userFullProfile, setUserFullProfile] = useState();\r\n    const { newUser, setNewUser } = useContext(MainContext);\r\n    const { users, setUsers } = useContext(MainContext);\r\n    const { firstName, setFirstName } = useContext(MainContext);\r\n    const { lastName, setLastName } = useContext(MainContext);\r\n    const { email, setEmail } = useContext(MainContext);\r\n    const { telephone, setTelephone } = useContext(MainContext);\r\n    const { bio, setBio } = useContext(MainContext);\r\n    const { userPets, setUserPets } = useContext(MainContext);\r\n    const { token, setToken } = useContext(MainContext);\r\n\r\n    useEffect(() => {\r\n        getUserById(token, id)\r\n            .then(res => {\r\n                setThisUser(res);\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }, [])\r\n\r\n    const changeFs = (e) => {\r\n        setFirstName(e.target.value);\r\n    }\r\n\r\n    const changeLs = (e) => {\r\n        setLastName(e.target.value);\r\n    }\r\n    const changeTel = (e) => {\r\n        setTelephone(e.target.value);\r\n    }\r\n\r\n    const changeEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n    const changePets = (e) => {\r\n        const str = e.target.value;\r\n        let arrPets = str.split(',');\r\n        setUserPets(arrPets);\r\n    }\r\n    const changeBio = (e) => {\r\n        setBio(e.target.value);\r\n    }\r\n\r\n    const submitprofile = async (e) => {\r\n        let arrUserPets = [];\r\n        for (let i = 0; i < userPets.length; i++) {\r\n            arrUserPets.push(userPets[i]);\r\n        }\r\n        e.preventDefault();\r\n        let body;\r\n        const newUserData = {\r\n            id: id,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            telephone: telephone,\r\n            email: email,\r\n            petsOwned: arrUserPets,\r\n            bio: bio\r\n        }\r\n        try {\r\n            const response = await fetch('https://us-central1-pet-project-backend-9c241.cloudfunctions.net/app/user_admin_edit', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({ post: newUserData }),\r\n            });\r\n            body = await response.json();\r\n            setError(body);\r\n        } catch (error) {\r\n            setError(body);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <h1 className=\"header-profile mb-5\"> User Full Profile</h1>\r\n            <a\r\n                href=\"/admindashboard\"\r\n                className=\"btn btn-success w-100 admin-link\"\r\n                variant=\"warning\"\r\n                type=\"submit\"\r\n            >\r\n                Click Here To Admin's Dashboard\r\n            </a>\r\n            <Container className=\"container-profile\">\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Form onSubmit={e => submitprofile(e)}>\r\n                    <Form.Row>\r\n                        <Col>\r\n                            <Form.Control placeholder=\"First name\"\r\n                                onChange={e => changeFs(e)} defaultValue={thisUser.firstName} required />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Control placeholder=\"Last name\"\r\n                                onChange={e => changeLs(e)} defaultValue={thisUser.lastName} required />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Control type='number' placeholder=\"Telephone Number\"\r\n                                onChange={e => changeTel(e)} defaultValue={thisUser.telephone} />\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row >\r\n                        <Col>\r\n                            <Form.Group controlId=\"formGroupEmail\">\r\n                                <Form.Label></Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\"\r\n                                    onChange={e => changeEmail(e)} defaultValue={thisUser.email} disabled />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group controlId=\"formGroupPassword\">\r\n                                <Form.Label></Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Pets Owned IDs\"\r\n                                    onChange={e => changePets(e)} required defaultValue={thisUser.petsOwned} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label></Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} placeholder=\"Personal Bio\" defaultValue={thisUser.bio}\r\n                            onChange={e => changeBio(e)} />\r\n                    </Form.Group>\r\n                    <Button className=\"w-100 mt-4\" variant=\"warning\" type=\"submit\"\r\n                    >\r\n                        Submit Changes\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nexport default UserFullProfile;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\basicSearchResults.jsx",["238","239","240","241"],"import React, { useEffect, useState } from 'react';\r\nimport { MainContext } from '../Context/context';\r\nimport { useContext } from 'react';\r\nimport PetItem from './petitem';\r\nimport { searchPetByType } from '../Api/api';\r\nimport NavBar from './navbar';\r\n\r\nfunction BasicSearchResults(props) {\r\n    const [basicSearchResults, setBasicSearchResults] = useState();\r\n    const [typeSearch, setTypeSearch] = useState(props.match.params.type);\r\n\r\n    const basicSearching = (e) => {\r\n        searchPetByType(typeSearch)\r\n            .then(res => {\r\n                setBasicSearchResults(res);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        basicSearching(typeSearch);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            {basicSearchResults && !basicSearchResults.length && <h1 className=\"header-admin mb-5\">No Matches.Sorry!</h1>}\r\n            {basicSearchResults && basicSearchResults.length && <h1 className=\"header-admin mb-5\">Basic Search Results!</h1>}\r\n            <ul className=\"pet-list-admin basic-search\">\r\n                {basicSearchResults && basicSearchResults.map(pet =>\r\n                    <PetItem\r\n                        key={Math.random()}\r\n                        id={pet.id}\r\n                        name={pet.name}\r\n                        type={pet.type}\r\n                        color={pet.color}\r\n                        height={pet.height}\r\n                        weight={pet.weight}\r\n                        breed={pet.breed}\r\n                        adopted={pet.adopted}\r\n                        fostered={pet.fostered}\r\n                        hypoalergenic={pet.hypoalergenic}\r\n                        diet={pet.dietRestrictions}\r\n                        bio={pet.bio}\r\n                    />\r\n                )}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\nexport default BasicSearchResults;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\protectedRoute.jsx",["242","243"],"import React, { useState } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    const [permited, setPermited] = useState(localStorage.getItem('admin'));\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={\r\n               (props) => {\r\n                    if (permited == 'true'){\r\n                        return <Component {...props} />\r\n                    } \r\n                    else {\r\n                        return (\r\n                            <Redirect to={{\r\n                                pathname: '/adminlogin',\r\n                                state: {\r\n                                    from: props.location\r\n                                }\r\n                            }} />\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        />\r\n    );\r\n};","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Context\\context.jsx",["244","245","246"],"import React, { useState } from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useContext } from 'react';\r\n\r\nexport const MainContext = React.createContext({});\r\n","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petcard.jsx",["247","248","249","250","251","252","253","254","255"],"import React, { useState } from 'react';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport Modal from 'react-modal';\r\nimport '../App.css';\r\nimport { useEffect } from 'react';\r\nimport { getImgById } from '../Api/api'\r\nimport { useContext } from 'react';\r\nimport { MainContext } from '../Context/context';\r\n\r\nfunction PetCard(props) {\r\n    const [thisPet, setThisPet] = useState({});\r\n    const [modalIsOpen1, setModalIsOpen1] = useState(false);\r\n    const [imgPath, setImgPath] = useState();\r\n    const { currentUser, token,refresher, setRefresher, email} = useContext(MainContext);\r\n    const [adopted, setAdopted] = useState(false);\r\n    const [fostered, setFostered] = useState(false);\r\n    const[thisPetStatus, setThisPetStatus] = useState(props.petStatus);\r\n    const [footText, setFootText] = useState()\r\n\r\n    useEffect(() => {\r\n        getImgById(token, props.id)\r\n            .then(res => {\r\n                if (res) setImgPath(res);\r\n            })\r\n        if (props.petStatus == 'adopted') setAdopted(true)\r\n        else if (props.petStatus == 'fostered') setFostered(true);\r\n    }, [currentUser,refresher])\r\n\r\n    const onChangingStatus = async (newStatus) => {\r\n        const response = await fetch(`https://us-central1-pet-project-backend-9c241.cloudfunctions.net/app/pet_status/${props.id}/update/${newStatus}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ post: newStatus, userEmail: email }),\r\n        })\r\n        const body = await response.json();\r\n        if (newStatus == 'adopted'){\r\n            setAdopted(true)\r\n            setThisPetStatus('adopted')\r\n            setFootText('You adopted me!')\r\n        } \r\n        else if (newStatus == 'fostered'){\r\n            setFostered(true)\r\n            setThisPetStatus('fostered')\r\n            setFootText('Please adopt me!')\r\n        } \r\n        else if (newStatus == 'available') {\r\n            setFostered(false);\r\n            setAdopted(false);\r\n            setRefresher(true);\r\n            setThisPetStatus('available')\r\n            setFootText('I need a home!')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className=\"my-card\">\r\n                <Card.Img variant=\"top\" src={`${imgPath}`} alt='Pet Image' className='img-card' />\r\n                <Card.Body>\r\n                    <Card.Title>{props.name}</Card.Title>\r\n                    <p>Pet Status : {thisPetStatus} </p>\r\n                    {(adopted || fostered) && <Button variant=\"warning\" onClick={() => onChangingStatus('available')}>Return</Button>}\r\n                    {!adopted && < Button variant=\"warning\" onClick={() => onChangingStatus('adopted')}>Adopt</Button>}\r\n                    {(!adopted && !fostered) && <Button variant=\"warning\" onClick={() => onChangingStatus('fostered')}>Foster</Button>}\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <small className=\"text-muted\">{footText}</small>\r\n                </Card.Footer>\r\n                <Button type=\"button\" variant=\"warning\" onClick={() => setModalIsOpen1(true)}>See More</Button>\r\n                <Modal className=\"my-modal\"\r\n                    isOpen={modalIsOpen1}\r\n                    onRequestClose={() => setModalIsOpen1(false)}\r\n                >\r\n                    <h1 className=\"text-center\">More Info About Your Pet</h1>\r\n                    {props.name && <div>Name: {props.name}</div>}\r\n                    {props.type && <div>Type: {props.type}</div>}\r\n                    {props.breed && <div>Breed: {props.breed}</div>}\r\n                    {props.color && <div>Color: {props.color}</div>}\r\n                    {props.height && <div>Height in Cm: {props.height}</div>}\r\n                    {props.weight && <div>Weight in Kg: {props.weight}</div>}\r\n                    {props.hypoalergenic && <div>Hypoalergenic: {props.hypoalergenic}</div>}\r\n                    {props.diet && <div>Diet: {props.diet}</div>}\r\n                    {props.bio && <div>Bio: {props.bio}</div>}\r\n                </Modal>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\nexport default PetCard;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\userlist.jsx",["256","257"],"import React from 'react';\r\nimport { MainContext } from '../Context/context';\r\nimport { useContext } from 'react';\r\nimport PetItem from './petitem';\r\nimport UserItem from './useritem';\r\n\r\nfunction UsersList() {\r\n    const { users, setUsers } = useContext(MainContext);\r\n    return (\r\n        <>\r\n            <ul>\r\n                <a\r\n                    href=\"/admin\"\r\n                    className=\"btn btn-warning w-100 admin-form-link\"\r\n                    variant=\"warning\"\r\n                    type=\"submit\"\r\n                >\r\n                    Click Here To Pet's Upload Form\r\n            </a>\r\n                {users && users.map(user =>\r\n                    <UserItem\r\n                        key={Math.random()}\r\n                        firstName={user.firstName}\r\n                        lastName={user.lastName}\r\n                        email={user.email}\r\n                        id={user.id}\r\n                    />\r\n                )}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\nexport default UsersList;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petslist.jsx",[],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\useritem.jsx",["258"],"import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction UserItem(props) {\r\n    return (\r\n        <div\r\n            className='user-item'>\r\n            <span\r\n                className='user-name'>\r\n                {`First Name : \r\n                ${props.firstName}`}\r\n            </span>\r\n            <span\r\n                className='user-lastname'>\r\n                {`Last Name : \r\n                ${props.lastName}`}\r\n            </span>\r\n            <span\r\n                className='user-email'>\r\n                {`Email : \r\n                ${props.email}`}\r\n            </span>\r\n            <a href={`/users/${props.id}`} className=\"btn btn-success user-link\" >View User's Full Profile</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserItem;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\reportWebVitals.js",[],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Api\\api.js",[],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\edit.jsx",["259","260","261","262","263"],"import React from 'react';\r\nimport { Alert, Button, Container, Form, FormControl, Col, Row, Navbar, Nav, } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\n\r\nfunction Edit() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"header-admin mb-5\"> Admin's Pet Edit </h1>\r\n            <Container className=\"container-profile admin-prof\">\r\n                <Form>\r\n                    <Form.Row>\r\n                        <Col>\r\n                            <Form.Control placeholder=\"Type\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Control placeholder=\"Pet's Name\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Control placeholder=\"Color\" />\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row className=\"mt-3\">\r\n                        <Col>\r\n                            <Form.Control type=\"number\" placeholder=\"Height\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Control type=\"number\" placeholder=\"Weight\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Control placeholder=\"Breed\" />\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row className=\"mt-3\">\r\n                        <Col>\r\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                <Form.Label>Adoption Status:</Form.Label>\r\n                                <Form.Control as=\"select\">\r\n                                    <option></option>\r\n                                    <option>Adopted</option>\r\n                                    <option>Fostered</option>\r\n                                    <option>None of Above</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                                <Form.Label>Hypoalergenic:</Form.Label>\r\n                                <Form.Control as=\"select\">\r\n                                    <option></option>\r\n                                    <option>Yes</option>\r\n                                    <option>No</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Label>Dietary Restrictions</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={5} placeholder=\"Dietary Restrictions...\" />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form>\r\n                                <Form.Group>\r\n                                    <Form.File id=\"exampleFormControlFile1\" label=\"Upload Pet's Image\" />\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label></Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} placeholder=\"Pet's Bio\" />\r\n                    </Form.Group>\r\n                    <Button className=\"w-100 mt-2\" variant=\"warning\" type=\"submit\">\r\n                        Save Edit\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Edit;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\adminLogin.jsx",["264","265","266","267","268","269"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\savedPets.jsx",["270","271","272","273"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { MainContext } from '../Context/context';\r\nimport PetItem from './petitem';\r\nimport { getPetById } from '../Api/api';\r\n\r\nfunction SavedPetsList() {\r\n    const { savedPets, token,petsSaved, setPetsSaved,saved, setSaved } = useContext(MainContext);\r\n    \r\n    useEffect(() => {\r\n        let petsSavedArr = [];\r\n        if (savedPets) {\r\n            savedPets.map(petId => {\r\n                getPetById(token, petId)\r\n                    .then(response => {\r\n                        if (!petsSavedArr.includes(response)) petsSavedArr.push(response);\r\n                    })\r\n            })\r\n            setPetsSaved(petsSavedArr);\r\n        };\r\n    }, [savedPets,saved])\r\n\r\n    return (\r\n        <ul className=\"pet-list-admin\">\r\n            {petsSaved && petsSaved.map(pet =>\r\n                <PetItem\r\n                    key={Math.random()}\r\n                    id={pet.id}\r\n                    name={pet.name}\r\n                    type={pet.type}\r\n                    color={pet.color}\r\n                    height={pet.height}\r\n                    weight={pet.weight}\r\n                    breed={pet.breed}\r\n                    adopted={pet.adopted}\r\n                    fostered={pet.fostered}\r\n                    hypoalergenic={pet.hypoalergenic}\r\n                    diet={pet.dietRestrictions}\r\n                    bio={pet.bio}\r\n                />\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\nexport default SavedPetsList;\r\n","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\toggle.jsx",["274","275","276","277","278","279","280"],"import React, { useContext, useState } from 'react';\r\nimport { Accordion, Card, useAccordionToggle, Button, Form, FormControl, Image, Col, Alert } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport { advancedSearchPet } from '../Api/api';\r\nimport AdvResultItem from './advSearchResults'\r\n\r\nconst AccordionContext = React.createContext({});\r\n\r\nfunction ContextAwareToggle({ children, eventKey, callback }) {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n        eventKey,\r\n        () => callback && callback(eventKey),\r\n    );\r\n    const isCurrentEventKey = currentEventKey === eventKey;\r\n\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            style={{ backgroundColor: isCurrentEventKey ? 'blue' : 'orange' }}\r\n            onClick={decoratedOnClick}\r\n        >\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n\r\nfunction Toggle() {\r\n    const [typeSearch, setTypeSearch] = useState();\r\n    const [adoption, setAdoption] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [weight, setWeight] = useState();\r\n    const [type, setType] = useState();\r\n    const [petName, setPetName] = useState();\r\n    const [advResult, setAdvResult] = useState();\r\n    const [error, setError] = useState('');\r\n\r\n\r\n\r\n    const addPetName = (e) => {\r\n        setPetName(e.target.value);\r\n    }\r\n    const addPetType = (e) => {\r\n        setType(e.target.value);\r\n    }\r\n\r\n    const addPetHeight = (e) => {\r\n        setHeight(e.target.value);\r\n    }\r\n    const addPetWeight = (e) => {\r\n        setWeight(e.target.value);\r\n    }\r\n\r\n    const adoptSelect = (e) => {\r\n        setAdoption(e.target.value);\r\n    }\r\n\r\n    const advSearchSubmit = (e) => {\r\n        e.preventDefault();\r\n        advancedSearchPet(adoption, height, weight, type, petName)\r\n            .then(res => {\r\n                console.log(res)\r\n                setAdvResult(res);\r\n            })\r\n    }\r\n\r\n    const handleTypeInput = (e) => {\r\n        setTypeSearch(e.target.value);\r\n        if (e.target.value.trim() == '') setTypeSearch('undefined')\r\n    }\r\n\r\n    const handleTypeKeyInput = (e) => {\r\n        if (e.key === 'Enter') {\r\n            javascript: window.location.href = `/basic_search_results/${typeSearch}`;\r\n        }\r\n    }\r\n\r\n    const basicSearching = (e) => {\r\n        e.preventDefault();\r\n        javascript: window.location.href = `/basic_search_results/${typeSearch}`;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Accordion defaultActiveKey=\"0\" className=\"accordion\">\r\n                <Card className=\"accordion\">\r\n                    <Card.Header>\r\n                        <ContextAwareToggle eventKey=\"0\">Basic Search By Pet Type </ContextAwareToggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body >\r\n                            <Form className=\"form-hp \" onSubmit={e => basicSearching(e)}>\r\n                                <FormControl\r\n                                    as=\"textarea\"\r\n                                    className=\"form-control search-basic  \"\r\n                                    id='basic'\r\n                                    rows={1}\r\n                                    onChange={e => handleTypeInput(e)}\r\n                                    onKeyUp={e => handleTypeKeyInput(e)}\r\n                                    placeholder='Search Pets By Type...' >\r\n                                </FormControl>\r\n                                <Button className=\"btn btn-success w-100 basic-btn\" variant='success' type=\"submit\"  >Basic Search By Type</Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n                <Card className=\"accordion\">\r\n                    <Card.Header>\r\n                        <ContextAwareToggle eventKey=\"1\">Advanced Search</ContextAwareToggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"1\">\r\n                        <Card.Body>\r\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            <Form className=\"form-adv\" onSubmit={e => advSearchSubmit(e)} encType=\"multipart/form-data\">\r\n                                <Form.Row>\r\n                                    <Col>\r\n                                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Control as=\"select\" onChange={selectValue => adoptSelect(selectValue)}  >\r\n                                                <option></option>\r\n                                                <option value='adopted'>Adopted</option>\r\n                                                <option value='fostered'>Fostered</option>\r\n                                                <option value='available'>Available</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Control type='number' placeholder=\"Height in Cm\" onChange={e => addPetHeight(e)} />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Control type='number' placeholder=\"Weight in Kg\" onChange={e => addPetWeight(e)} />\r\n                                    </Col>\r\n                                </Form.Row>\r\n                                <Form.Row >\r\n                                    <Col>\r\n                                        <Form.Group controlId=\"formGroupEmail\">\r\n                                            <Form.Label></Form.Label>\r\n                                            <Form.Control placeholder=\"Type\" type=\"text\" onChange={e => addPetType(e)} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group controlId=\"formGroupPassword\">\r\n                                            <Form.Label></Form.Label>\r\n                                            <Form.Control placeholder=\"Name\" type=\"text\" onChange={e => addPetName(e)} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Form.Row>\r\n                                <Button className=\"w-100 mt-2\" variant=\"success\" type=\"submit\">\r\n                                    Advanced Search\r\n                            </Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n            <ul>\r\n                {advResult && advResult.map(pet =>\r\n                    <AdvResultItem\r\n                        key={Math.random()}\r\n                        id={pet.id}\r\n                        name={pet.name}\r\n                        type={pet.type}\r\n                        color={pet.color}\r\n                        height={pet.height}\r\n                        weight={pet.weight}\r\n                        breed={pet.breed}\r\n                        adopted={pet.adopted}\r\n                        fostered={pet.fostered}\r\n                        hypoalergenic={pet.hypoalergenic}\r\n                        diet={pet.dietRestrictions}\r\n                        bio={pet.bio}\r\n                    />\r\n                )}\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\nexport default Toggle;\r\n","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petstatus.jsx",["281","282","283","284","285","286","287","288","289"],"import { Button, Alert } from 'react-bootstrap';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { MainContext } from '../Context/context';\r\nimport { getPetById } from '../Api/api';\r\n\r\nfunction PetStatus(props) {\r\n    const [admin] = useState(localStorage.getItem('admin'));\r\n    const [error, setError] = useState();\r\n    const [thisPet, setThisPet] = useState({});\r\n    const { token, email, userPets, setRefresher } = useContext(MainContext);\r\n    const [adopted, setAdopted] = useState('');\r\n    const [fostered, setFostered] = useState('');\r\n    const [owner, setOwner] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getPetById(token, props.id)\r\n            .then(res => {\r\n                setThisPet(res);\r\n                if (res.petStatus == 'adopted') setAdopted(true);\r\n                else if (res.petStatus == 'fostered') setFostered(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n        if (userPets && userPets.includes(props.id)) setOwner(true);\r\n    }, [adopted, fostered, userPets])\r\n\r\n    const onChangingStatus = async (newStatus) => {\r\n        if (admin == 'true' || token == 'noToken') {\r\n            setError('You must login as a User to Adopt/Foster Pets');\r\n            return;\r\n        }\r\n        const response = await fetch(`https://us-central1-pet-project-backend-9c241.cloudfunctions.net/app/pet_status/${props.id}/update/${newStatus}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ post: newStatus, userEmail: email }),\r\n        })\r\n        const body = await response.json();\r\n        if (newStatus == 'adopted') {\r\n            setAdopted(true)\r\n            setOwner(true)\r\n        }\r\n        else if (newStatus == 'fostered') {\r\n            setFostered(true)\r\n            setOwner(true)\r\n        }\r\n        else if (newStatus == 'available') {\r\n            setFostered(false);\r\n            setAdopted(false);\r\n            setOwner(false)\r\n            setRefresher(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {error && <Alert variant=\"danger\" className='profile-error'>{error}</Alert>}\r\n            {thisPet.petStatus ? <p> Pet Status : {thisPet.petStatus}</p> :\r\n                <p> Pet Status : Available {thisPet.petStatus}</p>}\r\n            {owner && (adopted || fostered) && <Button variant=\"warning\" onClick={() => onChangingStatus('available')}>Return</Button>}\r\n            {!error && !adopted && < Button variant=\"warning\" onClick={() => onChangingStatus('adopted')}>Adopt</Button>}\r\n            {!error && (!adopted && !fostered) && <Button variant=\"warning\" onClick={() => onChangingStatus('fostered')}>Foster</Button>}\r\n        </div>\r\n    )\r\n}\r\nexport default PetStatus;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\petspage.jsx",["290","291","292","293","294"],"import React, { useState } from 'react';\r\nimport { Card, Nav, Button, Tabs, Tab } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport PetProfile from './petprofile';\r\nimport PetStatus from './petstatus';\r\nimport NavBar from './navbar';\r\nimport SavedPetsList from './savedPets';\r\n\r\nfunction PetsPage(props) {\r\n    const [id, setId] = useState(props.match.params.id);\r\n    const [key, setKey] = useState('home');\r\n\r\n    return (\r\n        <>\r\n        <NavBar/>\r\n        <div>\r\n            <h1 className=\"text-center pet-page\">Pet Page</h1>\r\n            <Tabs\r\n                className=\"tab-pets\"\r\n                activeKey={key}\r\n                onSelect={(k) => setKey(k)}\r\n            >\r\n                <Tab eventKey=\"home\" title=\"Pet Profile\" className=\"tab-item\" >\r\n                    <PetProfile id={id} />\r\n                </Tab>\r\n                <Tab eventKey=\"saved\" title=\"Saved Pets\" className=\"tab-item\">\r\n                    <SavedPetsList/>\r\n                </Tab>\r\n            </Tabs>\r\n        </div>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default PetsPage;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\adminsList.jsx",["295","296"],"import React from 'react';\r\nimport { MainContext } from '../Context/context';\r\nimport { useContext } from 'react';\r\nimport PetItem from './petitem';\r\nimport UserItem from './useritem';\r\nimport AdminItem from './adminItem';\r\n\r\nfunction AdminsList() {\r\n    const { admins } = useContext(MainContext);\r\n    return (\r\n        <>\r\n            <ul>\r\n                <a\r\n                    href=\"/admin\"\r\n                    className=\"btn btn-warning w-100 admin-form-link\"\r\n                    variant=\"warning\"\r\n                    type=\"submit\"\r\n                >\r\n                    Click Here To Pet's Upload Form\r\n            </a>\r\n                {admins && admins.map(admin =>\r\n                    <AdminItem\r\n                        key={Math.random()}\r\n                        firstName={admin.firstName}\r\n                        lastName={admin.lastName}\r\n                        email={admin.email}\r\n                        id={admin.id}\r\n                    />\r\n                )}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\nexport default AdminsList;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\adminItem.jsx",["297"],"import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction AdminItem(props) {\r\n    return (\r\n        <div\r\n            className='user-item'>\r\n            <span\r\n                className='user-name'>\r\n                {`First Name : \r\n                ${props.firstName}`}\r\n            </span>\r\n            <span\r\n                className='user-lastname'>\r\n                {`Last Name : \r\n                ${props.lastName}`}\r\n            </span>\r\n            <span\r\n                className='user-email'>\r\n                {`Email : \r\n                ${props.email}`}\r\n            </span>\r\n            <a href={`/admins/${props.id}`} className=\"btn btn-success user-link\" >View Admin's Full Profile</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminItem;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\adminfullprofile.jsx",["298","299","300","301","302","303","304","305","306","307"],"import React, { useEffect } from 'react';\r\nimport { Button, Container, Form, Col, Alert, } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport { useContext } from 'react';\r\nimport { MainContext } from '../Context/context';\r\nimport { useState } from 'react';\r\nimport { getAdminById } from '../Api/api';\r\nimport NavBar from './navbar';\r\n\r\n\r\nfunction AdminFullProfile(props) {\r\n    const [id, setId] = useState(props.match.params.id);\r\n    const [thisUser, setThisUser] = useState({});\r\n    const [error, setError] = useState();\r\n    const [userFullProfile, setUserFullProfile] = useState();\r\n    const { newUser, setNewUser } = useContext(MainContext);\r\n    const { users, setUsers } = useContext(MainContext);\r\n    const { firstName, setFirstName } = useContext(MainContext);\r\n    const { lastName, setLastName } = useContext(MainContext);\r\n    const { email, setEmail } = useContext(MainContext);\r\n    const { telephone, setTelephone } = useContext(MainContext);\r\n    const { bio, setBio } = useContext(MainContext);\r\n    const { userPets, setUserPets } = useContext(MainContext);\r\n    const { token, setToken } = useContext(MainContext);\r\n\r\n    useEffect(() => {\r\n        getAdminById(token, id)\r\n            .then(res => {\r\n                setThisUser(res);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [])\r\n\r\n    const changeFs = (e) => {\r\n        setFirstName(e.target.value);\r\n    }\r\n\r\n    const changeLs = (e) => {\r\n        setLastName(e.target.value);\r\n    }\r\n    const changeTel = (e) => {\r\n        setTelephone(e.target.value);\r\n    }\r\n\r\n    const changeEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const changeBio = (e) => {\r\n        setBio(e.target.value);\r\n    }\r\n\r\n    const submitprofile = async (e) => {\r\n        let arrUserPets = [];\r\n        for (let i = 0; i < userPets.length; i++) {\r\n            arrUserPets.push(userPets[i]);\r\n        }\r\n        e.preventDefault();\r\n        let body;\r\n        const newAdminData = {\r\n            id: id,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            telephone: telephone,\r\n            email: email,\r\n            bio: bio\r\n        }\r\n        try {\r\n            const response = await fetch('https://us-central1-pet-project-backend-9c241.cloudfunctions.net/app/admin_profile_edit', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({ post: newAdminData }),\r\n            });\r\n            body = await response.json();\r\n            setError(body);\r\n        } catch (error) {\r\n            setError(body);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <h1 className=\"header-profile mb-5\"> Admin Full Profile</h1>\r\n            <a\r\n                href=\"/admindashboard\"\r\n                className=\"btn btn-success w-100 admin-link\"\r\n                variant=\"warning\"\r\n                type=\"submit\"\r\n            >\r\n                Click Here To Admin's Dashboard\r\n            </a>\r\n            <Container className=\"container-profile\">\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Form onSubmit={e => submitprofile(e)}>\r\n                    <Form.Row>\r\n                        <Col>\r\n                            <Form.Control placeholder=\"First name\"\r\n                                onChange={e => changeFs(e)} defaultValue={thisUser.firstName} required />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Control placeholder=\"Last name\"\r\n                                onChange={e => changeLs(e)} defaultValue={thisUser.lastName} required />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Control type='number' placeholder=\"Telephone Number\"\r\n                                onChange={e => changeTel(e)} defaultValue={thisUser.telephone} />\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row >\r\n                        <Col>\r\n                            <Form.Group controlId=\"formGroupEmail\">\r\n                                <Form.Label></Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\"\r\n                                    onChange={e => changeEmail(e)} defaultValue={thisUser.email} disabled />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group controlId=\"formGroupPassword\">\r\n                                <Form.Label></Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Sorry admin, sign in as a user for pets.\" disabled />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label></Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} placeholder=\"Personal Bio\" defaultValue={thisUser.bio}\r\n                            onChange={e => changeBio(e)} />\r\n                    </Form.Group>\r\n                    <Button className=\"w-100 mt-4\" variant=\"warning\" type=\"submit\"\r\n                    >\r\n                        Submit Changes\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nexport default AdminFullProfile;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\protectedRouteProfile.jsx",["308"],"import React, { useState } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const ProtectedRouteProfile = ({ component: Component, ...rest }) => {\r\n    const [permited, setPermited] = useState(localStorage.getItem('token'));\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={\r\n               (props) => {\r\n                    if (permited !== 'noToken'){\r\n                        return <Component {...props} />\r\n                    } \r\n                    else {\r\n                        return (\r\n                            <Redirect to={{\r\n                                pathname: '/logged_out',\r\n                                state: {\r\n                                    from: props.location\r\n                                }\r\n                            }} />\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        />\r\n    );\r\n};",{"ruleId":"309","severity":1,"message":"310","line":13,"column":13,"nodeType":"311","messageId":"312","endLine":13,"endColumn":20},{"ruleId":"309","severity":1,"message":"313","line":13,"column":22,"nodeType":"311","messageId":"312","endLine":13,"endColumn":32},{"ruleId":"309","severity":1,"message":"314","line":14,"column":13,"nodeType":"311","messageId":"312","endLine":14,"endColumn":18},{"ruleId":"309","severity":1,"message":"315","line":14,"column":20,"nodeType":"311","messageId":"312","endLine":14,"endColumn":28},{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","replacedBy":"319"},{"ruleId":"309","severity":1,"message":"320","line":2,"column":37,"nodeType":"311","messageId":"312","endLine":2,"endColumn":44},{"ruleId":"309","severity":1,"message":"321","line":2,"column":46,"nodeType":"311","messageId":"312","endLine":2,"endColumn":55},{"ruleId":"309","severity":1,"message":"322","line":2,"column":57,"nodeType":"311","messageId":"312","endLine":2,"endColumn":62},{"ruleId":"309","severity":1,"message":"323","line":2,"column":64,"nodeType":"311","messageId":"312","endLine":2,"endColumn":67},{"ruleId":"309","severity":1,"message":"324","line":2,"column":69,"nodeType":"311","messageId":"312","endLine":2,"endColumn":75},{"ruleId":"309","severity":1,"message":"325","line":3,"column":8,"nodeType":"311","messageId":"312","endLine":3,"endColumn":13},{"ruleId":"309","severity":1,"message":"326","line":11,"column":7,"nodeType":"311","messageId":"312","endLine":11,"endColumn":14},{"ruleId":"309","severity":1,"message":"327","line":15,"column":13,"nodeType":"311","messageId":"312","endLine":15,"endColumn":17},{"ruleId":"309","severity":1,"message":"328","line":15,"column":19,"nodeType":"311","messageId":"312","endLine":15,"endColumn":26},{"ruleId":"309","severity":1,"message":"329","line":15,"column":28,"nodeType":"311","messageId":"312","endLine":15,"endColumn":35},{"ruleId":"309","severity":1,"message":"330","line":15,"column":37,"nodeType":"311","messageId":"312","endLine":15,"endColumn":45},{"ruleId":"309","severity":1,"message":"331","line":15,"column":47,"nodeType":"311","messageId":"312","endLine":15,"endColumn":60},{"ruleId":"309","severity":1,"message":"332","line":15,"column":72,"nodeType":"311","messageId":"312","endLine":15,"endColumn":83},{"ruleId":"333","severity":1,"message":"334","line":20,"column":29,"nodeType":"335","messageId":"336","endLine":20,"endColumn":31},{"ruleId":"337","severity":1,"message":"338","line":28,"column":8,"nodeType":"339","endLine":28,"endColumn":18,"suggestions":"340"},{"ruleId":"309","severity":1,"message":"322","line":2,"column":43,"nodeType":"311","messageId":"312","endLine":2,"endColumn":48},{"ruleId":"309","severity":1,"message":"341","line":4,"column":10,"nodeType":"311","messageId":"312","endLine":4,"endColumn":14},{"ruleId":"342","severity":1,"message":"343","line":16,"column":35,"nodeType":"344","messageId":"345","endLine":16,"endColumn":37},{"ruleId":"346","severity":1,"message":"347","line":21,"column":13,"nodeType":"348","messageId":"349","endLine":21,"endColumn":86},{"ruleId":"350","severity":1,"message":"351","line":21,"column":13,"nodeType":"311","messageId":"352","endLine":21,"endColumn":23,"fix":"353"},{"ruleId":"346","severity":1,"message":"347","line":27,"column":9,"nodeType":"348","messageId":"349","endLine":27,"endColumn":82},{"ruleId":"350","severity":1,"message":"351","line":27,"column":9,"nodeType":"311","messageId":"352","endLine":27,"endColumn":19,"fix":"354"},{"ruleId":"309","severity":1,"message":"355","line":2,"column":31,"nodeType":"311","messageId":"312","endLine":2,"endColumn":35},{"ruleId":"309","severity":1,"message":"356","line":4,"column":8,"nodeType":"311","messageId":"312","endLine":4,"endColumn":12},{"ruleId":"309","severity":1,"message":"357","line":9,"column":11,"nodeType":"311","messageId":"312","endLine":9,"endColumn":19},{"ruleId":"309","severity":1,"message":"358","line":9,"column":35,"nodeType":"311","messageId":"312","endLine":9,"endColumn":43},{"ruleId":"309","severity":1,"message":"359","line":20,"column":47,"nodeType":"311","messageId":"312","endLine":20,"endColumn":58},{"ruleId":"309","severity":1,"message":"360","line":39,"column":20,"nodeType":"311","messageId":"312","endLine":39,"endColumn":31},{"ruleId":"309","severity":1,"message":"361","line":40,"column":19,"nodeType":"311","messageId":"312","endLine":40,"endColumn":29},{"ruleId":"309","severity":1,"message":"362","line":41,"column":25,"nodeType":"311","messageId":"312","endLine":41,"endColumn":41},{"ruleId":"309","severity":1,"message":"363","line":2,"column":42,"nodeType":"311","messageId":"312","endLine":2,"endColumn":53},{"ruleId":"309","severity":1,"message":"364","line":2,"column":60,"nodeType":"311","messageId":"312","endLine":2,"endColumn":63},{"ruleId":"309","severity":1,"message":"365","line":2,"column":65,"nodeType":"311","messageId":"312","endLine":2,"endColumn":71},{"ruleId":"309","severity":1,"message":"366","line":2,"column":73,"nodeType":"311","messageId":"312","endLine":2,"endColumn":76},{"ruleId":"309","severity":1,"message":"367","line":11,"column":16,"nodeType":"311","messageId":"312","endLine":11,"endColumn":21},{"ruleId":"337","severity":1,"message":"368","line":43,"column":8,"nodeType":"339","endLine":43,"endColumn":10,"suggestions":"369"},{"ruleId":"370","severity":1,"message":"371","line":99,"column":20,"nodeType":"372","messageId":"345","endLine":99,"endColumn":25},{"ruleId":"309","severity":1,"message":"373","line":1,"column":10,"nodeType":"311","messageId":"312","endLine":1,"endColumn":14},{"ruleId":"309","severity":1,"message":"366","line":1,"column":16,"nodeType":"311","messageId":"312","endLine":1,"endColumn":19},{"ruleId":"309","severity":1,"message":"374","line":1,"column":29,"nodeType":"311","messageId":"312","endLine":1,"endColumn":33},{"ruleId":"309","severity":1,"message":"375","line":1,"column":35,"nodeType":"311","messageId":"312","endLine":1,"endColumn":38},{"ruleId":"309","severity":1,"message":"376","line":4,"column":8,"nodeType":"311","messageId":"312","endLine":4,"endColumn":14},{"ruleId":"309","severity":1,"message":"377","line":13,"column":20,"nodeType":"311","messageId":"312","endLine":13,"endColumn":28},{"ruleId":"309","severity":1,"message":"378","line":13,"column":74,"nodeType":"311","messageId":"312","endLine":13,"endColumn":86},{"ruleId":"337","severity":1,"message":"379","line":26,"column":8,"nodeType":"339","endLine":26,"endColumn":37,"suggestions":"380"},{"ruleId":"342","severity":1,"message":"343","line":29,"column":19,"nodeType":"344","messageId":"345","endLine":29,"endColumn":21},{"ruleId":"342","severity":1,"message":"343","line":29,"column":38,"nodeType":"344","messageId":"345","endLine":29,"endColumn":40},{"ruleId":"309","severity":1,"message":"381","line":60,"column":19,"nodeType":"311","messageId":"312","endLine":60,"endColumn":23},{"ruleId":"382","severity":1,"message":"383","line":71,"column":29,"nodeType":"384","endLine":71,"endColumn":79},{"ruleId":"309","severity":1,"message":"363","line":2,"column":42,"nodeType":"311","messageId":"312","endLine":2,"endColumn":53},{"ruleId":"309","severity":1,"message":"364","line":2,"column":60,"nodeType":"311","messageId":"312","endLine":2,"endColumn":63},{"ruleId":"309","severity":1,"message":"365","line":2,"column":65,"nodeType":"311","messageId":"312","endLine":2,"endColumn":71},{"ruleId":"309","severity":1,"message":"366","line":2,"column":73,"nodeType":"311","messageId":"312","endLine":2,"endColumn":76},{"ruleId":"309","severity":1,"message":"385","line":12,"column":12,"nodeType":"311","messageId":"312","endLine":12,"endColumn":14},{"ruleId":"309","severity":1,"message":"367","line":12,"column":16,"nodeType":"311","messageId":"312","endLine":12,"endColumn":21},{"ruleId":"370","severity":1,"message":"371","line":85,"column":20,"nodeType":"372","messageId":"345","endLine":85,"endColumn":25},{"ruleId":"309","severity":1,"message":"373","line":2,"column":10,"nodeType":"311","messageId":"312","endLine":2,"endColumn":14},{"ruleId":"309","severity":1,"message":"366","line":2,"column":16,"nodeType":"311","messageId":"312","endLine":2,"endColumn":19},{"ruleId":"309","severity":1,"message":"324","line":2,"column":21,"nodeType":"311","messageId":"312","endLine":2,"endColumn":27},{"ruleId":"309","severity":1,"message":"386","line":5,"column":8,"nodeType":"311","messageId":"312","endLine":5,"endColumn":13},{"ruleId":"309","severity":1,"message":"387","line":18,"column":13,"nodeType":"311","messageId":"312","endLine":18,"endColumn":18},{"ruleId":"309","severity":1,"message":"388","line":29,"column":12,"nodeType":"311","messageId":"312","endLine":29,"endColumn":17},{"ruleId":"309","severity":1,"message":"389","line":30,"column":12,"nodeType":"311","messageId":"312","endLine":30,"endColumn":25},{"ruleId":"342","severity":1,"message":"343","line":73,"column":42,"nodeType":"344","messageId":"345","endLine":73,"endColumn":44},{"ruleId":"309","severity":1,"message":"367","line":13,"column":16,"nodeType":"311","messageId":"312","endLine":13,"endColumn":21},{"ruleId":"309","severity":1,"message":"390","line":16,"column":12,"nodeType":"311","messageId":"312","endLine":16,"endColumn":27},{"ruleId":"309","severity":1,"message":"391","line":16,"column":29,"nodeType":"311","messageId":"312","endLine":16,"endColumn":47},{"ruleId":"309","severity":1,"message":"310","line":17,"column":13,"nodeType":"311","messageId":"312","endLine":17,"endColumn":20},{"ruleId":"309","severity":1,"message":"313","line":17,"column":22,"nodeType":"311","messageId":"312","endLine":17,"endColumn":32},{"ruleId":"309","severity":1,"message":"314","line":18,"column":13,"nodeType":"311","messageId":"312","endLine":18,"endColumn":18},{"ruleId":"309","severity":1,"message":"315","line":18,"column":20,"nodeType":"311","messageId":"312","endLine":18,"endColumn":28},{"ruleId":"309","severity":1,"message":"377","line":25,"column":20,"nodeType":"311","messageId":"312","endLine":25,"endColumn":28},{"ruleId":"337","severity":1,"message":"368","line":34,"column":8,"nodeType":"339","endLine":34,"endColumn":10,"suggestions":"392"},{"ruleId":"309","severity":1,"message":"393","line":2,"column":10,"nodeType":"311","messageId":"312","endLine":2,"endColumn":21},{"ruleId":"309","severity":1,"message":"394","line":3,"column":10,"nodeType":"311","messageId":"312","endLine":3,"endColumn":20},{"ruleId":"309","severity":1,"message":"395","line":10,"column":24,"nodeType":"311","messageId":"312","endLine":10,"endColumn":37},{"ruleId":"337","severity":1,"message":"396","line":21,"column":8,"nodeType":"339","endLine":21,"endColumn":10,"suggestions":"397"},{"ruleId":"309","severity":1,"message":"398","line":5,"column":22,"nodeType":"311","messageId":"312","endLine":5,"endColumn":33},{"ruleId":"342","severity":1,"message":"343","line":12,"column":34,"nodeType":"344","messageId":"345","endLine":12,"endColumn":36},{"ruleId":"309","severity":1,"message":"399","line":1,"column":17,"nodeType":"311","messageId":"312","endLine":1,"endColumn":25},{"ruleId":"309","severity":1,"message":"400","line":2,"column":10,"nodeType":"311","messageId":"312","endLine":2,"endColumn":19},{"ruleId":"309","severity":1,"message":"394","line":3,"column":10,"nodeType":"311","messageId":"312","endLine":3,"endColumn":20},{"ruleId":"309","severity":1,"message":"401","line":11,"column":12,"nodeType":"311","messageId":"312","endLine":11,"endColumn":19},{"ruleId":"309","severity":1,"message":"402","line":11,"column":21,"nodeType":"311","messageId":"312","endLine":11,"endColumn":31},{"ruleId":"342","severity":1,"message":"343","line":25,"column":29,"nodeType":"344","messageId":"345","endLine":25,"endColumn":31},{"ruleId":"342","severity":1,"message":"343","line":26,"column":34,"nodeType":"344","messageId":"345","endLine":26,"endColumn":36},{"ruleId":"337","severity":1,"message":"403","line":27,"column":8,"nodeType":"339","endLine":27,"endColumn":31,"suggestions":"404"},{"ruleId":"309","severity":1,"message":"381","line":38,"column":15,"nodeType":"311","messageId":"312","endLine":38,"endColumn":19},{"ruleId":"342","severity":1,"message":"343","line":39,"column":23,"nodeType":"344","messageId":"345","endLine":39,"endColumn":25},{"ruleId":"342","severity":1,"message":"343","line":44,"column":28,"nodeType":"344","messageId":"345","endLine":44,"endColumn":30},{"ruleId":"342","severity":1,"message":"343","line":49,"column":28,"nodeType":"344","messageId":"345","endLine":49,"endColumn":30},{"ruleId":"309","severity":1,"message":"405","line":4,"column":8,"nodeType":"311","messageId":"312","endLine":4,"endColumn":15},{"ruleId":"309","severity":1,"message":"315","line":8,"column":20,"nodeType":"311","messageId":"312","endLine":8,"endColumn":28},{"ruleId":"309","severity":1,"message":"324","line":2,"column":10,"nodeType":"311","messageId":"312","endLine":2,"endColumn":16},{"ruleId":"309","severity":1,"message":"406","line":2,"column":10,"nodeType":"311","messageId":"312","endLine":2,"endColumn":15},{"ruleId":"309","severity":1,"message":"363","line":2,"column":42,"nodeType":"311","messageId":"312","endLine":2,"endColumn":53},{"ruleId":"309","severity":1,"message":"364","line":2,"column":60,"nodeType":"311","messageId":"312","endLine":2,"endColumn":63},{"ruleId":"309","severity":1,"message":"365","line":2,"column":65,"nodeType":"311","messageId":"312","endLine":2,"endColumn":71},{"ruleId":"309","severity":1,"message":"366","line":2,"column":73,"nodeType":"311","messageId":"312","endLine":2,"endColumn":76},{"ruleId":"309","severity":1,"message":"386","line":5,"column":8,"nodeType":"311","messageId":"312","endLine":5,"endColumn":13},{"ruleId":"309","severity":1,"message":"387","line":19,"column":13,"nodeType":"311","messageId":"312","endLine":19,"endColumn":18},{"ruleId":"309","severity":1,"message":"407","line":19,"column":20,"nodeType":"311","messageId":"312","endLine":19,"endColumn":28},{"ruleId":"309","severity":1,"message":"388","line":29,"column":12,"nodeType":"311","messageId":"312","endLine":29,"endColumn":17},{"ruleId":"309","severity":1,"message":"389","line":30,"column":12,"nodeType":"311","messageId":"312","endLine":30,"endColumn":25},{"ruleId":"342","severity":1,"message":"343","line":73,"column":42,"nodeType":"344","messageId":"345","endLine":73,"endColumn":44},{"ruleId":"309","severity":1,"message":"399","line":1,"column":28,"nodeType":"311","messageId":"312","endLine":1,"endColumn":36},{"ruleId":"309","severity":1,"message":"408","line":7,"column":61,"nodeType":"311","messageId":"312","endLine":7,"endColumn":69},{"ruleId":"333","severity":1,"message":"334","line":12,"column":33,"nodeType":"335","messageId":"336","endLine":12,"endColumn":35},{"ruleId":"337","severity":1,"message":"409","line":20,"column":8,"nodeType":"339","endLine":20,"endColumn":25,"suggestions":"410"},{"ruleId":"309","severity":1,"message":"322","line":2,"column":74,"nodeType":"311","messageId":"312","endLine":2,"endColumn":79},{"ruleId":"309","severity":1,"message":"411","line":37,"column":19,"nodeType":"311","messageId":"312","endLine":37,"endColumn":27},{"ruleId":"342","severity":1,"message":"343","line":70,"column":35,"nodeType":"344","messageId":"345","endLine":70,"endColumn":37},{"ruleId":"346","severity":1,"message":"347","line":75,"column":13,"nodeType":"348","messageId":"349","endLine":75,"endColumn":86},{"ruleId":"350","severity":1,"message":"351","line":75,"column":13,"nodeType":"311","messageId":"352","endLine":75,"endColumn":23,"fix":"412"},{"ruleId":"346","severity":1,"message":"347","line":81,"column":9,"nodeType":"348","messageId":"349","endLine":81,"endColumn":82},{"ruleId":"350","severity":1,"message":"351","line":81,"column":9,"nodeType":"311","messageId":"352","endLine":81,"endColumn":19,"fix":"413"},{"ruleId":"342","severity":1,"message":"343","line":19,"column":35,"nodeType":"344","messageId":"345","endLine":19,"endColumn":37},{"ruleId":"342","severity":1,"message":"343","line":20,"column":40,"nodeType":"344","messageId":"345","endLine":20,"endColumn":42},{"ruleId":"337","severity":1,"message":"379","line":24,"column":8,"nodeType":"339","endLine":24,"endColumn":37,"suggestions":"414"},{"ruleId":"342","severity":1,"message":"343","line":27,"column":19,"nodeType":"344","messageId":"345","endLine":27,"endColumn":21},{"ruleId":"342","severity":1,"message":"343","line":27,"column":38,"nodeType":"344","messageId":"345","endLine":27,"endColumn":40},{"ruleId":"309","severity":1,"message":"381","line":39,"column":15,"nodeType":"311","messageId":"312","endLine":39,"endColumn":19},{"ruleId":"342","severity":1,"message":"343","line":40,"column":23,"nodeType":"344","messageId":"345","endLine":40,"endColumn":25},{"ruleId":"342","severity":1,"message":"343","line":44,"column":28,"nodeType":"344","messageId":"345","endLine":44,"endColumn":30},{"ruleId":"342","severity":1,"message":"343","line":48,"column":28,"nodeType":"344","messageId":"345","endLine":48,"endColumn":30},{"ruleId":"309","severity":1,"message":"373","line":2,"column":10,"nodeType":"311","messageId":"312","endLine":2,"endColumn":14},{"ruleId":"309","severity":1,"message":"366","line":2,"column":16,"nodeType":"311","messageId":"312","endLine":2,"endColumn":19},{"ruleId":"309","severity":1,"message":"324","line":2,"column":21,"nodeType":"311","messageId":"312","endLine":2,"endColumn":27},{"ruleId":"309","severity":1,"message":"415","line":5,"column":8,"nodeType":"311","messageId":"312","endLine":5,"endColumn":17},{"ruleId":"309","severity":1,"message":"367","line":10,"column":16,"nodeType":"311","messageId":"312","endLine":10,"endColumn":21},{"ruleId":"309","severity":1,"message":"405","line":4,"column":8,"nodeType":"311","messageId":"312","endLine":4,"endColumn":15},{"ruleId":"309","severity":1,"message":"416","line":5,"column":8,"nodeType":"311","messageId":"312","endLine":5,"endColumn":16},{"ruleId":"309","severity":1,"message":"324","line":2,"column":10,"nodeType":"311","messageId":"312","endLine":2,"endColumn":16},{"ruleId":"309","severity":1,"message":"367","line":13,"column":16,"nodeType":"311","messageId":"312","endLine":13,"endColumn":21},{"ruleId":"309","severity":1,"message":"390","line":16,"column":12,"nodeType":"311","messageId":"312","endLine":16,"endColumn":27},{"ruleId":"309","severity":1,"message":"391","line":16,"column":29,"nodeType":"311","messageId":"312","endLine":16,"endColumn":47},{"ruleId":"309","severity":1,"message":"310","line":17,"column":13,"nodeType":"311","messageId":"312","endLine":17,"endColumn":20},{"ruleId":"309","severity":1,"message":"313","line":17,"column":22,"nodeType":"311","messageId":"312","endLine":17,"endColumn":32},{"ruleId":"309","severity":1,"message":"314","line":18,"column":13,"nodeType":"311","messageId":"312","endLine":18,"endColumn":18},{"ruleId":"309","severity":1,"message":"315","line":18,"column":20,"nodeType":"311","messageId":"312","endLine":18,"endColumn":28},{"ruleId":"309","severity":1,"message":"417","line":24,"column":23,"nodeType":"311","messageId":"312","endLine":24,"endColumn":34},{"ruleId":"309","severity":1,"message":"377","line":25,"column":20,"nodeType":"311","messageId":"312","endLine":25,"endColumn":28},{"ruleId":"337","severity":1,"message":"368","line":33,"column":8,"nodeType":"339","endLine":33,"endColumn":10,"suggestions":"418"},{"ruleId":"309","severity":1,"message":"398","line":5,"column":22,"nodeType":"311","messageId":"312","endLine":5,"endColumn":33},"no-unused-vars","'newUser' is assigned a value but never used.","Identifier","unusedVar","'setNewUser' is assigned a value but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","no-native-reassign",["419"],"no-negated-in-lhs",["420"],"'CardImg' is defined but never used.","'CardImage' is defined but never used.","'Image' is defined but never used.","'Img' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'arrPets' is assigned a value but never used.","'pets' is assigned a value but never used.","'setPets' is assigned a value but never used.","'adopted' is assigned a value but never used.","'fostered' is assigned a value but never used.","'userPetStatus' is assigned a value but never used.","'currentUser' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["421"],"'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'javascript:' is defined but never used.","unused",{"range":"422","text":"423"},{"range":"424","text":"423"},"'Form' is defined but never used.","'logo' is defined but never used.","'firsName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'getAdminApi' is defined but never used.","'setFostered' is assigned a value but never used.","'setAdopted' is assigned a value but never used.","'setUserPetStatus' is assigned a value but never used.","'FormControl' is defined but never used.","'Row' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'setId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'token'. Either include them or remove the dependency array.",["425"],"no-dupe-keys","Duplicate key 'breed'.","ObjectExpression","'Card' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'NavBar' is defined but never used.","'setToken' is assigned a value but never used.","'setPetsSaved' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.id' and 'token'. Either include them or remove the dependency array.",["426"],"'body' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'id' is assigned a value but never used.","'axios' is defined but never used.","'admin' is assigned a value but never used.","'token' is assigned a value but never used.","'administrator' is assigned a value but never used.","'userFullProfile' is assigned a value but never used.","'setUserFullProfile' is assigned a value but never used.",["427"],"'MainContext' is defined but never used.","'useContext' is defined but never used.","'setTypeSearch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'basicSearching' and 'typeSearch'. Either include them or remove the dependency array.",["428"],"'setPermited' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'thisPet' is assigned a value but never used.","'setThisPet' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.id', 'props.petStatus', and 'token'. Either include them or remove the dependency array.",["429"],"'PetItem' is defined but never used.","'Alert' is defined but never used.","'setAdmin' is assigned a value but never used.","'setSaved' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setPetsSaved' and 'token'. Either include them or remove the dependency array.",["430"],"'setError' is assigned a value but never used.",{"range":"431","text":"423"},{"range":"432","text":"423"},["433"],"'PetStatus' is defined but never used.","'UserItem' is defined but never used.","'setUserPets' is assigned a value but never used.",["434"],"no-global-assign","no-unsafe-negation",{"desc":"435","fix":"436"},[772,784],"",[941,953],{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"437","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},[2246,2258],[2415,2427],{"desc":"448","fix":"449"},{"desc":"437","fix":"450"},"Update the dependencies array to be: [token, userPets]",{"range":"451","text":"452"},"Update the dependencies array to be: [id, token]",{"range":"453","text":"454"},"Update the dependencies array to be: [petsSaved, savedPets, saved, token, props.id]",{"range":"455","text":"456"},{"range":"457","text":"454"},"Update the dependencies array to be: [basicSearching, typeSearch]",{"range":"458","text":"459"},"Update the dependencies array to be: [currentUser, props.id, props.petStatus, refresher, token]",{"range":"460","text":"461"},"Update the dependencies array to be: [savedPets, saved, setPetsSaved, token]",{"range":"462","text":"463"},"Update the dependencies array to be: [adopted, fostered, props.id, token, userPets]",{"range":"464","text":"465"},{"range":"466","text":"454"},[1025,1035],"[token, userPets]",[1732,1734],"[id, token]",[997,1026],"[petsSaved, savedPets, saved, token, props.id]",[1379,1381],[680,682],"[basicSearching, typeSearch]",[1101,1124],"[currentUser, props.id, props.petStatus, refresher, token]",[721,738],"[savedPets, saved, setPetsSaved, token]",[1023,1052],"[adopted, fostered, props.id, token, userPets]",[1380,1382]]
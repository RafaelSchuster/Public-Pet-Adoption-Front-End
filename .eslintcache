[{"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\navbar.jsx":"1","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\mypets.jsx":"2","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\App.jsx":"3","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\Pets.jsx":"4","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\searchresults.jsx":"5","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\main.jsx":"6","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\index.js":"7","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\profile.jsx":"8","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\search.jsx":"9","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\toggle.jsx":"10"},{"size":812,"mtime":1608226009378,"results":"11","hashOfConfig":"12"},{"size":5948,"mtime":1608214066549,"results":"13","hashOfConfig":"12"},{"size":1326,"mtime":1608227342402,"results":"14","hashOfConfig":"12"},{"size":140,"mtime":1608215068619,"results":"15","hashOfConfig":"12"},{"size":158,"mtime":1608215858269,"results":"16","hashOfConfig":"12"},{"size":2127,"mtime":1608227427512,"results":"17","hashOfConfig":"12"},{"size":500,"mtime":1606136368259,"results":"18","hashOfConfig":"12"},{"size":2114,"mtime":1608063361805,"results":"19","hashOfConfig":"12"},{"size":807,"mtime":1608227506501,"results":"20","hashOfConfig":"12"},{"size":3945,"mtime":1608230146441,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"1mluya3",{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\navbar.jsx",["45","46","47"],"import React from 'react';\r\nimport { Navbar, Nav, Button, Form, } from 'react-bootstrap';\r\nimport logo from '../images/logo.png'\r\nimport logo2 from '../images/logo2.png'\r\n\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <Navbar bg=\"warning\" variant=\"warning\" className=\"navBar\">\r\n            <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"/\" className=\"navLink\">Home</Nav.Link>\r\n                <Nav.Link href='/pets' className=\"navLink\">Pets</Nav.Link>\r\n                <Nav.Link href='/search' className=\"navLink\">Search</Nav.Link>\r\n                <div className=\"banner-nav\"><img src={logo2}alt=\"\" className=\"logo-nav\"/>\r\n                <span className=\"banner-nav\">RentaPet <span className=\"itc\">ITC</span> </span> </div>\r\n            </Nav>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavBar;","E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\mypets.jsx",["48","49","50","51"],"import React, { useState } from 'react'\r\nimport { Card, CardDeck, Container, CardImg, CardImage, Image, Img, Button } from 'react-bootstrap';\r\nimport Modal from 'react-modal';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css'\r\nimport image1 from \"../images/dog.jpg\"\r\nimport image2 from \"../images/cat.jpg\"\r\nimport image3 from \"../images/giraffe.jpg\"\r\n\r\nfunction MyPets() {\r\n    const [modalIsOpen1, setModalIsOpen1] = useState(false)\r\n    const [modalIsOpen2, setModalIsOpen2] = useState(false)\r\n    const [modalIsOpen3, setModalIsOpen3] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1 className=\"header-profile mb-5\"> Your Pets</h1>\r\n            </div>\r\n            <Card className=\"status\">\r\n                <Card.Body className=\"head-status\">You have adopted 3 Pets.</Card.Body>\r\n            </Card>\r\n            <Container className=\"my-pets\">\r\n                <CardDeck className=\"deck\">\r\n                    <Card className=\"my-card\">\r\n                        <Card.Img variant=\"top\" src={image1} />\r\n                        <Card.Body>\r\n                            <Card.Title>Pet 1</Card.Title>\r\n                            <Card.Text>\r\n                                Pet 1\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                        </Card.Footer>\r\n                        <Button type=\"button\" variant=\"warning\" onClick={() => setModalIsOpen1(true)}>See More</Button>\r\n                        <Modal style={\r\n                            {\r\n                                overlay: { backgroundImage: { image3 } },\r\n                                content: {\r\n                                    color: 'rgb(4, 5, 19)',\r\n                                    top: '100px',\r\n                                    width: '50%',\r\n                                    height: '70%',\r\n                                    display: 'block',\r\n                                    marginLeft: 'auto',\r\n                                    marginRight: 'auto'\r\n                                }\r\n                            }\r\n                        }\r\n                            isOpen={modalIsOpen1}\r\n                            onRequestClose={() => setModalIsOpen1(false)}\r\n                        >\r\n                            <h1 className=\"text-center\">More Info About Your Pet</h1>\r\n                        </Modal>\r\n                    </Card>\r\n                    <Card className=\"my-card\">\r\n                        <Card.Img variant=\"top\" src={image2} />\r\n                        <Card.Body>\r\n                            <Card.Title>Pet 2</Card.Title>\r\n                            <Card.Text>\r\n                                Pet 2\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                        </Card.Footer>\r\n                        <Button type=\"button\" variant=\"warning\" onClick={() => setModalIsOpen2(true)}>See More</Button>\r\n                        <Modal style={\r\n                            {\r\n                                overlay: { backgroundImage: { image3 } },\r\n                                content: {\r\n                                    color: 'rgb(4, 5, 19)',\r\n                                    top: '100px',\r\n                                    width: '50%',\r\n                                    height: '70%',\r\n                                    display: 'block',\r\n                                    marginLeft: 'auto',\r\n                                    marginRight: 'auto'\r\n                                }\r\n                            }\r\n                        }\r\n                            isOpen={modalIsOpen2}\r\n                            onRequestClose={() => setModalIsOpen2(false)}\r\n                        >\r\n                            <h1 className=\"text-center\">More Info About Your Pet</h1>\r\n                        </Modal>\r\n                    </Card>\r\n                    <Card className=\"my-card\">\r\n                        <Card.Img variant=\"top\" src={image3} />\r\n                        <Card.Body>\r\n                            <Card.Title>Pet 3</Card.Title>\r\n                            <Card.Text>\r\n                                Pet 3\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                        </Card.Footer>\r\n                        <Button type=\"button\" variant=\"warning\" onClick={() => setModalIsOpen3(true)}>See More</Button>\r\n                        <Modal style={\r\n                            {\r\n                                overlay: { backgroundImage: { image3 } },\r\n                                content: {\r\n                                    color: 'rgb(4, 5, 19)',\r\n                                    top: '100px',\r\n                                    width: '50%',\r\n                                    height: '70%',\r\n                                    display: 'block',\r\n                                    marginLeft: 'auto',\r\n                                    marginRight: 'auto'\r\n                                }\r\n                            }\r\n                        }\r\n                            isOpen={modalIsOpen3}\r\n                            onRequestClose={() => setModalIsOpen3(false)}\r\n                        >\r\n                            <h1 className=\"text-center\">More Info About Your Pet</h1>\r\n\r\n                        </Modal>\r\n                    </Card>\r\n                </CardDeck>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyPets;",["52","53"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\App.jsx",[],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\Pets.jsx",[],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\searchresults.jsx",[],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\main.jsx",["54","55","56"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\index.js",[],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\profile.jsx",["57","58","59","60","61"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\search.jsx",["62","63","64"],"E:\\Desktop\\Experiment\\Curso\\FullStackProject\\src\\Components\\toggle.jsx",["65"],{"ruleId":"66","severity":1,"message":"67","line":2,"column":23,"nodeType":"68","messageId":"69","endLine":2,"endColumn":29},{"ruleId":"66","severity":1,"message":"70","line":2,"column":31,"nodeType":"68","messageId":"69","endLine":2,"endColumn":35},{"ruleId":"66","severity":1,"message":"71","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":12},{"ruleId":"66","severity":1,"message":"72","line":2,"column":37,"nodeType":"68","messageId":"69","endLine":2,"endColumn":44},{"ruleId":"66","severity":1,"message":"73","line":2,"column":46,"nodeType":"68","messageId":"69","endLine":2,"endColumn":55},{"ruleId":"66","severity":1,"message":"74","line":2,"column":57,"nodeType":"68","messageId":"69","endLine":2,"endColumn":62},{"ruleId":"66","severity":1,"message":"75","line":2,"column":64,"nodeType":"68","messageId":"69","endLine":2,"endColumn":67},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":16},{"ruleId":"66","severity":1,"message":"74","line":2,"column":43,"nodeType":"68","messageId":"69","endLine":2,"endColumn":48},{"ruleId":"66","severity":1,"message":"80","line":4,"column":10,"nodeType":"68","messageId":"69","endLine":4,"endColumn":14},{"ruleId":"66","severity":1,"message":"81","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":15},{"ruleId":"66","severity":1,"message":"82","line":2,"column":42,"nodeType":"68","messageId":"69","endLine":2,"endColumn":53},{"ruleId":"66","severity":1,"message":"83","line":2,"column":60,"nodeType":"68","messageId":"69","endLine":2,"endColumn":63},{"ruleId":"66","severity":1,"message":"84","line":2,"column":65,"nodeType":"68","messageId":"69","endLine":2,"endColumn":71},{"ruleId":"66","severity":1,"message":"85","line":2,"column":73,"nodeType":"68","messageId":"69","endLine":2,"endColumn":76},{"ruleId":"66","severity":1,"message":"67","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":16},{"ruleId":"66","severity":1,"message":"86","line":2,"column":37,"nodeType":"68","messageId":"69","endLine":2,"endColumn":41},{"ruleId":"66","severity":1,"message":"74","line":2,"column":43,"nodeType":"68","messageId":"69","endLine":2,"endColumn":48},{"ruleId":"66","severity":1,"message":"74","line":2,"column":74,"nodeType":"68","messageId":"69","endLine":2,"endColumn":79},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'logo' is defined but never used.","'CardImg' is defined but never used.","'CardImage' is defined but never used.","'Image' is defined but never used.","'Img' is defined but never used.","no-native-reassign",["87"],"no-negated-in-lhs",["88"],"'Link' is defined but never used.","'Alert' is defined but never used.","'FormControl' is defined but never used.","'Row' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'Card' is defined but never used.","no-global-assign","no-unsafe-negation"]